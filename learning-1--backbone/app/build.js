var app =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _controller = __webpack_require__(1);\n\nvar _controller2 = _interopRequireDefault(_controller);\n\nvar _controller3 = __webpack_require__(8);\n\nvar _controller4 = _interopRequireDefault(_controller3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import jedi from './request_jedis'\n// import planet from './planet'\n\nif (true) {\n\tconsole.log('NODE_ENV', (\"dev\"));\n}\n\n// jedi.request('3616', function(data) {\n// \tconsole.log(\"Получены данные \" + data);\n// });\n\n// exports.test = test;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/main.js\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./scripts/main.js?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _Backbone = __webpack_require__(2);\n\nvar _Backbone2 = _interopRequireDefault(_Backbone);\n\nvar _view = __webpack_require__(6);\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _model = __webpack_require__(7);\n\nvar _model2 = _interopRequireDefault(_model);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar planetModel = new _model2.default();\nvar planetView = new _view2.default({\n\tmodel: planetModel,\n\tel: '.js-current-planet'\n});\n\nvar socket = new WebSocket('ws://jedi.smartjs.academy');\nsocket.onmessage = function (event) {\n\tplanetModel.set({\n\t\tname: JSON.parse(event.data).name\n\t});\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/current-planet/controller.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./scripts/current-planet/controller.js?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\n//     Backbone.js 1.2.3\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function (factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) == 'object' && self.self == self && self || (typeof global === 'undefined' ? 'undefined' : _typeof(global)) == 'object' && global.global == global && global;\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(4), exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n    // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n      var _ = require('underscore'),\n          $;\n      try {\n        $ = require('jquery');\n      } catch (e) {}\n      factory(root, exports, _, $);\n\n      // Finally, as a browser global.\n    } else {\n        root.Backbone = factory(root, {}, root._, root.jQuery || root.Zepto || root.ender || root.$);\n      }\n})(function (root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var _slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function () {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function addMethod(length, method, attribute) {\n    switch (length) {\n      case 1:\n        return function () {\n          return _[method](this[attribute]);\n        };\n      case 2:\n        return function (value) {\n          return _[method](this[attribute], value);\n        };\n      case 3:\n        return function (iteratee, context) {\n          return _[method](this[attribute], cb(iteratee, this), context);\n        };\n      case 4:\n        return function (iteratee, defaultVal, context) {\n          return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n        };\n      default:\n        return function () {\n          var args = _slice.call(arguments);\n          args.unshift(this[attribute]);\n          return _[method].apply(_, args);\n        };\n    }\n  };\n  var addUnderscoreMethods = function addUnderscoreMethods(Class, methods, attribute) {\n    _.each(methods, function (length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function cb(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function (model) {\n      return model.get(iteratee);\n    };\n    return iteratee;\n  };\n  var modelMatcher = function modelMatcher(attrs) {\n    var matcher = _.matches(attrs);\n    return function (model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function eventsApi(iteratee, events, name, callback, opts) {\n    var i = 0,\n        names;\n    if (name && (typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function (name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function internalOn(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function (obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = { obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0 };\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function onApi(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context,\n          ctx = options.ctx,\n          listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function (name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function (obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function offApi(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0,\n        listening;\n    var context = options.context,\n        listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (callback && callback !== handler.callback && callback !== handler.callback._callback || context && context !== handler.context) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function (name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function (obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function onceMap(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function () {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function (name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = arguments[i + 1];\n    }eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function triggerApi(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function triggerEvents(events, args) {\n    var ev,\n        i = -1,\n        l = events.length,\n        a1 = args[0],\n        a2 = args[1],\n        a3 = args[2];\n    switch (args.length) {\n      case 0:\n        while (++i < l) {\n          (ev = events[i]).callback.call(ev.ctx);\n        }return;\n      case 1:\n        while (++i < l) {\n          (ev = events[i]).callback.call(ev.ctx, a1);\n        }return;\n      case 2:\n        while (++i < l) {\n          (ev = events[i]).callback.call(ev.ctx, a1, a2);\n        }return;\n      case 3:\n        while (++i < l) {\n          (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n        }return;\n      default:\n        while (++i < l) {\n          (ev = events[i]).callback.apply(ev.ctx, args);\n        }return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function (attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function toJSON(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function sync() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function get(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function escape(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function has(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function matches(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function set(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if ((typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset = options.unset;\n      var silent = options.silent;\n      var changes = [];\n      var changing = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function unset(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, { unset: true }));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function clear(options) {\n      var attrs = {};\n      for (var key in this.attributes) {\n        attrs[key] = void 0;\n      }return this.set(attrs, _.extend({}, options, { unset: true }));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function hasChanged(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function changedAttributes(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function previous(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function previousAttributes() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function fetch(options) {\n      options = _.extend({ parse: true }, options);\n      var model = this;\n      var success = options.success;\n      options.success = function (resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function save(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || (typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({ validate: true, parse: true }, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function (resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function destroy(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function destroy() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function (resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function url() {\n      var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function parse(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function clone() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function isNew() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function isValid(options) {\n      return this._validate({}, _.defaults({ validate: true }, options));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function _validate(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, { validationError: error }));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n    omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function (models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({ silent: true }, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = { add: true, remove: true, merge: true };\n  var addOptions = { add: true, remove: false };\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function splice(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    for (var i = 0; i < tail.length; i++) {\n      tail[i] = array[i + at];\n    }for (i = 0; i < length; i++) {\n      array[i + at] = insert[i];\n    }for (i = 0; i < tail.length; i++) {\n      array[i + length + at] = tail[i];\n    }\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function toJSON(options) {\n      return this.map(function (model) {\n        return model.toJSON(options);\n      });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function sync() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function add(models, options) {\n      return this.set(models, _.extend({ merge: false }, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function remove(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function set(models, options) {\n      if (models == null) return;\n\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model;\n      for (var i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n          // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n            model = models[i] = this._prepareModel(model, options);\n            if (model) {\n              toAdd.push(model);\n              this._addReference(model, options);\n              modelMap[model.cid] = true;\n              set.push(model);\n            }\n          }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length != set.length || _.some(this.models, function (model, index) {\n          return model !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({ silent: true });\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function reset(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({ silent: true }, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function push(model, options) {\n      return this.add(model, _.extend({ at: this.length }, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function pop(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function unshift(model, options) {\n      return this.add(model, _.extend({ at: 0 }, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function shift(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function slice() {\n      return _slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function get(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function at(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function where(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function findWhere(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function sort(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function pluck(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function fetch(options) {\n      options = _.extend({ parse: true }, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function (resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function create(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function (model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function parse(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function clone() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function modelId(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function _reset() {\n      this.length = 0;\n      this.models = [];\n      this._byId = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function _prepareModel(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function _removeModels(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed.length ? removed : false;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function _isModel(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function _addReference(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function _removeReference(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function _onModelEvent(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n    foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n    select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n    contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n    head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n    without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n    isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n    sortBy: 3, indexBy: 3 };\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function (options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function $(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function render() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function remove() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function _removeElement() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function setElement(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function _setElement(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function delegateEvents(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function delegate(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function undelegateEvents() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function undelegate(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function _createElement(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function _ensureElement() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function _setAttributes(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function (method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = { type: type, dataType: 'json' };\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? { model: params.data } : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function (xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function (xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function () {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function (options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam = /(\\(\\?)?:\\w+/g;\n  var splatParam = /\\*\\w+/g;\n  var escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function initialize() {},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function route(_route, name, callback) {\n      if (!_.isRegExp(_route)) _route = this._routeToRegExp(_route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(_route, function (fragment) {\n        var args = router._extractParameters(_route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function execute(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function navigate(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function _bindRoutes() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route,\n          routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function _routeToRegExp(route) {\n      route = route.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n        return optional ? match : '([^/?]+)';\n      }).replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function _extractParameters(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function (param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function () {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function atRoot() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function matchRoot() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function decodeFragment(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function getSearch() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function getHash(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function getPath() {\n      var path = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function getFragment(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function start(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options = _.extend({ root: '/' }, this.options, options);\n      this.root = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState = !!this.options.pushState;\n      this._hasPushState = !!(this.history && this.history.pushState);\n      this._usePushState = this._wantsPushState && this._hasPushState;\n      this.fragment = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n          // Or if we've started out with a hash-based route, but we're currently\n          // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n            this.navigate(this.getHash(), { replace: true });\n          }\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function stop() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function route(_route2, callback) {\n      this.handlers.unshift({ route: _route2, callback: callback });\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function checkUrl(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function loadUrl(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function (handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function navigate(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = { trigger: !!options };\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n        // If hash changes haven't been explicitly disabled, update the hash\n        // fragment to store history.\n      } else if (this._wantsHashChange) {\n          this._updateHash(this.location, fragment, options.replace);\n          if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n            var iWindow = this.iframe.contentWindow;\n\n            // Opening and closing the iframe tricks IE7 and earlier to push a\n            // history entry on hash-tag change.  When replace is true, we don't\n            // want this.\n            if (!options.replace) {\n              iWindow.document.open();\n              iWindow.document.close();\n            }\n\n            this._updateHash(iWindow.location, fragment, options.replace);\n          }\n\n          // If you've told us that you explicitly don't want fallback hashchange-\n          // based history, then `navigate` becomes a page refresh.\n        } else {\n            return this.location.assign(url);\n          }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function _updateHash(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History();\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function extend(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function () {\n        return parent.apply(this, arguments);\n      };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function Surrogate() {\n      this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function urlError() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function wrapError(model, options) {\n    var error = options.error;\n    options.error = function (resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/backbone/backbone.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/backbone/backbone.js?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\n//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function () {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype,\n      ObjProto = Object.prototype,\n      FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeBind = FuncProto.bind,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function Ctor() {};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function _(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function optimizeCb(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1:\n        return function (value) {\n          return func.call(context, value);\n        };\n      case 2:\n        return function (value, other) {\n          return func.call(context, value, other);\n        };\n      case 3:\n        return function (value, index, collection) {\n          return func.call(context, value, index, collection);\n        };\n      case 4:\n        return function (accumulator, value, index, collection) {\n          return func.call(context, accumulator, value, index, collection);\n        };\n    }\n    return function () {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function cb(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function (value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function createAssigner(keysFunc, undefinedOnly) {\n    return function (obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function baseCreate(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor();\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function property(key) {\n    return function (obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function isArrayLike(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function (obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function (obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function (obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function (obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function (value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function (obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function (obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function (value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function (obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function (obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function (obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function (obj, iteratee, context) {\n    var result = -Infinity,\n        lastComputed = -Infinity,\n        value,\n        computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function (value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function (obj, iteratee, context) {\n    var result = Infinity,\n        lastComputed = Infinity,\n        value,\n        computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function (value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function (obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function (obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function (value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function (left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function group(behavior) {\n    return function (obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function (value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function (result, value, key) {\n    if (_.has(result, key)) result[key].push(value);else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function (result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function (result, value, key) {\n    if (_.has(result, key)) result[key]++;else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function (obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function (obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [],\n        fail = [];\n    _.each(obj, function (value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function (array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function (array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function (array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function (array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function (array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function flatten(input, shallow, strict, startIndex) {\n    var output = [],\n        idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0,\n            len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function (array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function (array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function (array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function () {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function (array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function (array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function (value) {\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function () {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function (array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function (list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function (array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function (array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0,\n        high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function (array, item, idx) {\n      var i = 0,\n          length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function (start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function (func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function bound() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function (func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function bound() {\n      var position = 0,\n          length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) {\n        args.push(arguments[position++]);\n      }return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function (obj) {\n    var i,\n        length = arguments.length,\n        key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function (func, hasher) {\n    var memoize = function memoize(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function (func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function () {\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function (func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function later() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function () {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function (func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function later() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function (func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function (predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function () {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) {\n        result = args[i].call(this, result);\n      }return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function (times, func) {\n    return function () {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function (times, func) {\n    var memo;\n    return function () {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !({ toString: null }).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) {\n      if (_.has(obj, key)) keys.push(key);\n    } // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) {\n      keys.push(key);\n    } // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function (obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {},\n        currentKey;\n    for (var index = 0; index < length; index++) {\n      currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function (obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function (obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function (obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj),\n        key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function (object, oiteratee, context) {\n    var result = {},\n        obj = object,\n        iteratee,\n        keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function (value, key, obj) {\n        return key in obj;\n      };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = function (obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function (value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function (prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function (object, attrs) {\n    var keys = _.keys(attrs),\n        length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) != 'object' || (typeof b === 'undefined' ? 'undefined' : _typeof(b)) != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor,\n          bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a),\n          key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function (a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function (obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function (obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function (obj) {\n    var type = typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function (name) {\n    _['is' + name] = function (obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function (obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && (typeof Int8Array === 'undefined' ? 'undefined' : _typeof(Int8Array)) != 'object') {\n    _.isFunction = function (obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function (obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function (obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function (obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function (obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function (obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function (obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function () {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function (value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function (value) {\n    return function () {\n      return value;\n    };\n  };\n\n  _.noop = function () {};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function (obj) {\n    return obj == null ? function () {} : function (key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function (attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function (obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function (n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) {\n      accum[i] = iteratee(i);\n    }return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function (min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function () {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function createEscaper(map) {\n    var escaper = function escaper(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function (string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function (object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function (prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function escapeChar(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function (text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function template(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function (obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function result(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function (obj) {\n    _.each(_.functions(obj), function (name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function () {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function () {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function (name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function () {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function () {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function () {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return _;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}).call(undefined);\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/backbone/~/underscore/underscore.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/backbone/~/underscore/underscore.js?");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {\"use strict\";function _typeof(obj){return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol?\"symbol\":typeof obj;} /*!\n * jQuery JavaScript Library v2.1.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-04-28T16:01Z\n */(function(global,factory){if(( false?\"undefined\":_typeof(module)) === \"object\" && _typeof(module.exports) === \"object\"){ // For CommonJS and CommonJS-like environments where a proper `window`\n// is present, execute the factory and get jQuery.\n// For environments that do not have a `window` with a `document`\n// (such as Node.js), expose a factory as module.exports.\n// This accentuates the need for the creation of a real `window`.\n// e.g. var jQuery = require(\"jquery\")(window);\n// See ticket #14549 for more info.\nmodule.exports = global.document?factory(global,true):function(w){if(!w.document){throw new Error(\"jQuery requires a window with a document\");}return factory(w);};}else {factory(global);} // Pass this if window is not defined yet\n})(typeof window !== \"undefined\"?window:undefined,function(window,noGlobal){ // Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\nvar arr=[];var _slice=arr.slice;var concat=arr.concat;var push=arr.push;var indexOf=arr.indexOf;var class2type={};var toString=class2type.toString;var hasOwn=class2type.hasOwnProperty;var support={};var  // Use the correct document accordingly with window argument (sandbox)\ndocument=window.document,version=\"2.1.4\", // Define a local copy of jQuery\njQuery=function jQuery(selector,context){ // The jQuery object is actually just the init constructor 'enhanced'\n// Need init if jQuery is called (just allow error to be thrown if not included)\nreturn new jQuery.fn.init(selector,context);}, // Support: Android<4.1\n// Make sure we trim BOM and NBSP\nrtrim=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, // Matches dashed string for camelizing\nrmsPrefix=/^-ms-/,rdashAlpha=/-([\\da-z])/gi, // Used by jQuery.camelCase as callback to replace()\nfcamelCase=function fcamelCase(all,letter){return letter.toUpperCase();};jQuery.fn = jQuery.prototype = { // The current version of jQuery being used\njquery:version,constructor:jQuery, // Start with an empty selector\nselector:\"\", // The default length of a jQuery object is 0\nlength:0,toArray:function toArray(){return _slice.call(this);}, // Get the Nth element in the matched element set OR\n// Get the whole matched element set as a clean array\nget:function get(num){return num != null? // Return just the one element from the set\nnum < 0?this[num + this.length]:this[num]: // Return all the elements in a clean array\n_slice.call(this);}, // Take an array of elements and push it onto the stack\n// (returning the new matched element set)\npushStack:function pushStack(elems){ // Build a new jQuery matched element set\nvar ret=jQuery.merge(this.constructor(),elems); // Add the old object onto the stack (as a reference)\nret.prevObject = this;ret.context = this.context; // Return the newly-formed element set\nreturn ret;}, // Execute a callback for every element in the matched set.\n// (You can seed the arguments with an array of args, but this is\n// only used internally.)\neach:function each(callback,args){return jQuery.each(this,callback,args);},map:function map(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},slice:function slice(){return this.pushStack(_slice.apply(this,arguments));},first:function first(){return this.eq(0);},last:function last(){return this.eq(-1);},eq:function eq(i){var len=this.length,j=+i + (i < 0?len:0);return this.pushStack(j >= 0 && j < len?[this[j]]:[]);},end:function end(){return this.prevObject || this.constructor(null);}, // For internal use only.\n// Behaves like an Array's method, not like a jQuery method.\npush:push,sort:arr.sort,splice:arr.splice};jQuery.extend = jQuery.fn.extend = function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0] || {},i=1,length=arguments.length,deep=false; // Handle a deep copy situation\nif(typeof target === \"boolean\"){deep = target; // Skip the boolean and the target\ntarget = arguments[i] || {};i++;} // Handle case when target is a string or something (possible in deep copy)\nif((typeof target === \"undefined\"?\"undefined\":_typeof(target)) !== \"object\" && !jQuery.isFunction(target)){target = {};} // Extend jQuery itself if only one argument is passed\nif(i === length){target = this;i--;}for(;i < length;i++) { // Only deal with non-null/undefined values\nif((options = arguments[i]) != null){ // Extend the base object\nfor(name in options) {src = target[name];copy = options[name]; // Prevent never-ending loop\nif(target === copy){continue;} // Recurse if we're merging plain objects or arrays\nif(deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))){if(copyIsArray){copyIsArray = false;clone = src && jQuery.isArray(src)?src:[];}else {clone = src && jQuery.isPlainObject(src)?src:{};} // Never move original objects, clone them\ntarget[name] = jQuery.extend(deep,clone,copy); // Don't bring in undefined values\n}else if(copy !== undefined){target[name] = copy;}}}} // Return the modified object\nreturn target;};jQuery.extend({ // Unique for each copy of jQuery on the page\nexpando:\"jQuery\" + (version + Math.random()).replace(/\\D/g,\"\"), // Assume jQuery is ready without the ready module\nisReady:true,error:function error(msg){throw new Error(msg);},noop:function noop(){},isFunction:function isFunction(obj){return jQuery.type(obj) === \"function\";},isArray:Array.isArray,isWindow:function isWindow(obj){return obj != null && obj === obj.window;},isNumeric:function isNumeric(obj){ // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n// subtraction forces infinities to NaN\n// adding 1 corrects loss of precision from parseFloat (#15100)\nreturn !jQuery.isArray(obj) && obj - parseFloat(obj) + 1 >= 0;},isPlainObject:function isPlainObject(obj){ // Not plain objects:\n// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n// - DOM nodes\n// - window\nif(jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow(obj)){return false;}if(obj.constructor && !hasOwn.call(obj.constructor.prototype,\"isPrototypeOf\")){return false;} // If the function hasn't returned already, we're confident that\n// |obj| is a plain object, created by {} or constructed with new Object\nreturn true;},isEmptyObject:function isEmptyObject(obj){var name;for(name in obj) {return false;}return true;},type:function type(obj){if(obj == null){return obj + \"\";} // Support: Android<4.0, iOS<6 (functionish RegExp)\nreturn (typeof obj === \"undefined\"?\"undefined\":_typeof(obj)) === \"object\" || typeof obj === \"function\"?class2type[toString.call(obj)] || \"object\":typeof obj === \"undefined\"?\"undefined\":_typeof(obj);}, // Evaluates a script in a global context\nglobalEval:function globalEval(code){var script,indirect=eval;code = jQuery.trim(code);if(code){ // If the code includes a valid, prologue position\n// strict mode pragma, execute code by injecting a\n// script tag into the document.\nif(code.indexOf(\"use strict\") === 1){script = document.createElement(\"script\");script.text = code;document.head.appendChild(script).parentNode.removeChild(script);}else { // Otherwise, avoid the DOM node creation, insertion\n// and removal by using an indirect global eval\nindirect(code);}}}, // Convert dashed to camelCase; used by the css and data modules\n// Support: IE9-11+\n// Microsoft forgot to hump their vendor prefix (#9572)\ncamelCase:function camelCase(string){return string.replace(rmsPrefix,\"ms-\").replace(rdashAlpha,fcamelCase);},nodeName:function nodeName(elem,name){return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();}, // args is for internal usage only\neach:function each(obj,callback,args){var value,i=0,length=obj.length,isArray=isArraylike(obj);if(args){if(isArray){for(;i < length;i++) {value = callback.apply(obj[i],args);if(value === false){break;}}}else {for(i in obj) {value = callback.apply(obj[i],args);if(value === false){break;}}} // A special, fast, case for the most common use of each\n}else {if(isArray){for(;i < length;i++) {value = callback.call(obj[i],i,obj[i]);if(value === false){break;}}}else {for(i in obj) {value = callback.call(obj[i],i,obj[i]);if(value === false){break;}}}}return obj;}, // Support: Android<4.1\ntrim:function trim(text){return text == null?\"\":(text + \"\").replace(rtrim,\"\");}, // results is for internal usage only\nmakeArray:function makeArray(arr,results){var ret=results || [];if(arr != null){if(isArraylike(Object(arr))){jQuery.merge(ret,typeof arr === \"string\"?[arr]:arr);}else {push.call(ret,arr);}}return ret;},inArray:function inArray(elem,arr,i){return arr == null?-1:indexOf.call(arr,elem,i);},merge:function merge(first,second){var len=+second.length,j=0,i=first.length;for(;j < len;j++) {first[i++] = second[j];}first.length = i;return first;},grep:function grep(elems,callback,invert){var callbackInverse,matches=[],i=0,length=elems.length,callbackExpect=!invert; // Go through the array, only saving the items\n// that pass the validator function\nfor(;i < length;i++) {callbackInverse = !callback(elems[i],i);if(callbackInverse !== callbackExpect){matches.push(elems[i]);}}return matches;}, // arg is for internal usage only\nmap:function map(elems,callback,arg){var value,i=0,length=elems.length,isArray=isArraylike(elems),ret=[]; // Go through the array, translating each of the items to their new values\nif(isArray){for(;i < length;i++) {value = callback(elems[i],i,arg);if(value != null){ret.push(value);}} // Go through every key on the object,\n}else {for(i in elems) {value = callback(elems[i],i,arg);if(value != null){ret.push(value);}}} // Flatten any nested arrays\nreturn concat.apply([],ret);}, // A global GUID counter for objects\nguid:1, // Bind a function to a context, optionally partially applying any\n// arguments.\nproxy:function proxy(fn,context){var tmp,args,proxy;if(typeof context === \"string\"){tmp = fn[context];context = fn;fn = tmp;} // Quick check to determine if target is callable, in the spec\n// this throws a TypeError, but we will just return undefined.\nif(!jQuery.isFunction(fn)){return undefined;} // Simulated bind\nargs = _slice.call(arguments,2);proxy = function(){return fn.apply(context || this,args.concat(_slice.call(arguments)));}; // Set the guid of unique handler to the same of original handler, so it can be removed\nproxy.guid = fn.guid = fn.guid || jQuery.guid++;return proxy;},now:Date.now, // jQuery.support is not used in Core but other projects attach their\n// properties to it so it needs to exist.\nsupport:support}); // Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(i,name){class2type[\"[object \" + name + \"]\"] = name.toLowerCase();});function isArraylike(obj){ // Support: iOS 8.2 (not reproducible in simulator)\n// `in` check used to prevent JIT error (gh-2145)\n// hasOwn isn't used here due to false negatives\n// regarding Nodelist length in IE\nvar length=\"length\" in obj && obj.length,type=jQuery.type(obj);if(type === \"function\" || jQuery.isWindow(obj)){return false;}if(obj.nodeType === 1 && length){return true;}return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;}var Sizzle= /*!\n * Sizzle CSS Selector Engine v2.2.0-pre\n * http://sizzlejs.com/\n *\n * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-12-16\n */(function(window){var i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate, // Local document vars\nsetDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains, // Instance-specific data\nexpando=\"sizzle\" + 1 * new Date(),preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),sortOrder=function sortOrder(a,b){if(a === b){hasDuplicate = true;}return 0;}, // General-purpose constants\nMAX_NEGATIVE=1 << 31, // Instance methods\nhasOwn=({}).hasOwnProperty,arr=[],pop=arr.pop,push_native=arr.push,push=arr.push,slice=arr.slice, // Use a stripped-down indexOf as it's faster than native\n// http://jsperf.com/thor-indexof-vs-for/5\nindexOf=function indexOf(list,elem){var i=0,len=list.length;for(;i < len;i++) {if(list[i] === elem){return i;}}return -1;},booleans=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\", // Regular expressions\n// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\nwhitespace=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\", // http://www.w3.org/TR/css3-syntax/#characters\ncharacterEncoding=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\", // Loosely modeled on CSS identifier characters\n// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\nidentifier=characterEncoding.replace(\"w\",\"w#\"), // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\nattributes=\"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace +  // Operator (capture 2)\n\"*([*^$|!~]?=)\" + whitespace +  // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",pseudos=\":(\" + characterEncoding + \")(?:\\\\((\" +  // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n// 1. quoted (capture 3; capture 4 or capture 5)\n\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +  // 2. simple (capture 6)\n\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +  // 3. anything else (capture 2)\n\".*\" + \")\\\\)|)\", // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\nrwhitespace=new RegExp(whitespace + \"+\",\"g\"),rtrim=new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\",\"g\"),rcomma=new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),rcombinators=new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),rattributeQuotes=new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\",\"g\"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp(\"^\" + identifier + \"$\"),matchExpr={\"ID\":new RegExp(\"^#(\" + characterEncoding + \")\"),\"CLASS\":new RegExp(\"^\\\\.(\" + characterEncoding + \")\"),\"TAG\":new RegExp(\"^(\" + characterEncoding.replace(\"w\",\"w*\") + \")\"),\"ATTR\":new RegExp(\"^\" + attributes),\"PSEUDO\":new RegExp(\"^\" + pseudos),\"CHILD\":new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\",\"i\"),\"bool\":new RegExp(\"^(?:\" + booleans + \")$\",\"i\"), // For use in libraries implementing .is()\n// We use this for POS matching in `select`\n\"needsContext\":new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\",\"i\")},rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\\d$/i,rnative=/^[^{]+\\{\\s*\\[native \\w/, // Easily-parseable/retrievable ID or TAG or CLASS selectors\nrquickExpr=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,rsibling=/[+~]/,rescape=/'|\\\\/g, // CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\nrunescape=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\",\"ig\"),funescape=function funescape(_,escaped,escapedWhitespace){var high=\"0x\" + escaped - 0x10000; // NaN means non-codepoint\n// Support: Firefox<24\n// Workaround erroneous numeric interpretation of +\"0x\"\nreturn high !== high || escapedWhitespace?escaped:high < 0? // BMP codepoint\nString.fromCharCode(high + 0x10000): // Supplemental Plane codepoint (surrogate pair)\nString.fromCharCode(high >> 10 | 0xD800,high & 0x3FF | 0xDC00);}, // Used for iframes\n// See setDocument()\n// Removing the function wrapper causes a \"Permission Denied\"\n// error in IE\nunloadHandler=function unloadHandler(){setDocument();}; // Optimize for push.apply( _, NodeList )\ntry{push.apply(arr = slice.call(preferredDoc.childNodes),preferredDoc.childNodes); // Support: Android<4.0\n// Detect silently failing push.apply\narr[preferredDoc.childNodes.length].nodeType;}catch(e) {push = {apply:arr.length? // Leverage slice if possible\nfunction(target,els){push_native.apply(target,slice.call(els));}: // Support: IE<9\n// Otherwise append directly\nfunction(target,els){var j=target.length,i=0; // Can't trust NodeList.length\nwhile(target[j++] = els[i++]) {}target.length = j - 1;}};}function Sizzle(selector,context,results,seed){var match,elem,m,nodeType, // QSA vars\ni,groups,old,nid,newContext,newSelector;if((context?context.ownerDocument || context:preferredDoc) !== document){setDocument(context);}context = context || document;results = results || [];nodeType = context.nodeType;if(typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11){return results;}if(!seed && documentIsHTML){ // Try to shortcut find operations when possible (e.g., not under DocumentFragment)\nif(nodeType !== 11 && (match = rquickExpr.exec(selector))){ // Speed-up: Sizzle(\"#ID\")\nif(m = match[1]){if(nodeType === 9){elem = context.getElementById(m); // Check parentNode to catch when Blackberry 4.6 returns\n// nodes that are no longer in the document (jQuery #6963)\nif(elem && elem.parentNode){ // Handle the case where IE, Opera, and Webkit return items\n// by name instead of ID\nif(elem.id === m){results.push(elem);return results;}}else {return results;}}else { // Context is not a document\nif(context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context,elem) && elem.id === m){results.push(elem);return results;}} // Speed-up: Sizzle(\"TAG\")\n}else if(match[2]){push.apply(results,context.getElementsByTagName(selector));return results; // Speed-up: Sizzle(\".CLASS\")\n}else if((m = match[3]) && support.getElementsByClassName){push.apply(results,context.getElementsByClassName(m));return results;}} // QSA path\nif(support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))){nid = old = expando;newContext = context;newSelector = nodeType !== 1 && selector; // qSA works strangely on Element-rooted queries\n// We can work around this by specifying an extra ID on the root\n// and working up from there (Thanks to Andrew Dupont for the technique)\n// IE 8 doesn't work on object elements\nif(nodeType === 1 && context.nodeName.toLowerCase() !== \"object\"){groups = tokenize(selector);if(old = context.getAttribute(\"id\")){nid = old.replace(rescape,\"\\\\$&\");}else {context.setAttribute(\"id\",nid);}nid = \"[id='\" + nid + \"'] \";i = groups.length;while(i--) {groups[i] = nid + toSelector(groups[i]);}newContext = rsibling.test(selector) && testContext(context.parentNode) || context;newSelector = groups.join(\",\");}if(newSelector){try{push.apply(results,newContext.querySelectorAll(newSelector));return results;}catch(qsaError) {}finally {if(!old){context.removeAttribute(\"id\");}}}}} // All others\nreturn select(selector.replace(rtrim,\"$1\"),context,results,seed);} /**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */function createCache(){var keys=[];function cache(key,value){ // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\nif(keys.push(key + \" \") > Expr.cacheLength){ // Only keep the most recent entries\ndelete cache[keys.shift()];}return cache[key + \" \"] = value;}return cache;} /**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */function markFunction(fn){fn[expando] = true;return fn;} /**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */function assert(fn){var div=document.createElement(\"div\");try{return !!fn(div);}catch(e) {return false;}finally { // Remove from its parent by default\nif(div.parentNode){div.parentNode.removeChild(div);} // release memory in IE\ndiv = null;}} /**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */function addHandle(attrs,handler){var arr=attrs.split(\"|\"),i=attrs.length;while(i--) {Expr.attrHandle[arr[i]] = handler;}} /**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */function siblingCheck(a,b){var cur=b && a,diff=cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE); // Use IE sourceIndex if available on both nodes\nif(diff){return diff;} // Check if b follows a\nif(cur){while(cur = cur.nextSibling) {if(cur === b){return -1;}}}return a?1:-1;} /**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */function createInputPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return name === \"input\" && elem.type === type;};} /**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return (name === \"input\" || name === \"button\") && elem.type === type;};} /**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */function createPositionalPseudo(fn){return markFunction(function(argument){argument = +argument;return markFunction(function(seed,matches){var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length; // Match elements found at the specified indexes\nwhile(i--) {if(seed[j = matchIndexes[i]]){seed[j] = !(matches[j] = seed[j]);}}});});} /**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */function testContext(context){return context && typeof context.getElementsByTagName !== \"undefined\" && context;} // Expose support vars for convenience\nsupport = Sizzle.support = {}; /**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */isXML = Sizzle.isXML = function(elem){ // documentElement is verified for cases where it doesn't yet exist\n// (such as loading iframes in IE - #4833)\nvar documentElement=elem && (elem.ownerDocument || elem).documentElement;return documentElement?documentElement.nodeName !== \"HTML\":false;}; /**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */setDocument = Sizzle.setDocument = function(node){var hasCompare,parent,doc=node?node.ownerDocument || node:preferredDoc; // If no document and documentElement is available, return\nif(doc === document || doc.nodeType !== 9 || !doc.documentElement){return document;} // Set our document\ndocument = doc;docElem = doc.documentElement;parent = doc.defaultView; // Support: IE>8\n// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n// IE6-8 do not support the defaultView property so parent will be undefined\nif(parent && parent !== parent.top){ // IE11 does not have attachEvent, so all must suffer\nif(parent.addEventListener){parent.addEventListener(\"unload\",unloadHandler,false);}else if(parent.attachEvent){parent.attachEvent(\"onunload\",unloadHandler);}} /* Support tests\n\t---------------------------------------------------------------------- */documentIsHTML = !isXML(doc); /* Attributes\n\t---------------------------------------------------------------------- */ // Support: IE<8\n// Verify that getAttribute really returns attributes and not properties\n// (excepting IE8 booleans)\nsupport.attributes = assert(function(div){div.className = \"i\";return !div.getAttribute(\"className\");}); /* getElement(s)By*\n\t---------------------------------------------------------------------- */ // Check if getElementsByTagName(\"*\") returns only elements\nsupport.getElementsByTagName = assert(function(div){div.appendChild(doc.createComment(\"\"));return !div.getElementsByTagName(\"*\").length;}); // Support: IE<9\nsupport.getElementsByClassName = rnative.test(doc.getElementsByClassName); // Support: IE<10\n// Check if getElementById returns elements by name\n// The broken getElementById methods don't pick up programatically-set names,\n// so use a roundabout getElementsByName test\nsupport.getById = assert(function(div){docElem.appendChild(div).id = expando;return !doc.getElementsByName || !doc.getElementsByName(expando).length;}); // ID find and filter\nif(support.getById){Expr.find[\"ID\"] = function(id,context){if(typeof context.getElementById !== \"undefined\" && documentIsHTML){var m=context.getElementById(id); // Check parentNode to catch when Blackberry 4.6 returns\n// nodes that are no longer in the document #6963\nreturn m && m.parentNode?[m]:[];}};Expr.filter[\"ID\"] = function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute(\"id\") === attrId;};};}else { // Support: IE6/7\n// getElementById is not reliable as a find shortcut\ndelete Expr.find[\"ID\"];Expr.filter[\"ID\"] = function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");return node && node.value === attrId;};};} // Tag\nExpr.find[\"TAG\"] = support.getElementsByTagName?function(tag,context){if(typeof context.getElementsByTagName !== \"undefined\"){return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n}else if(support.qsa){return context.querySelectorAll(tag);}}:function(tag,context){var elem,tmp=[],i=0, // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\nresults=context.getElementsByTagName(tag); // Filter out possible comments\nif(tag === \"*\"){while(elem = results[i++]) {if(elem.nodeType === 1){tmp.push(elem);}}return tmp;}return results;}; // Class\nExpr.find[\"CLASS\"] = support.getElementsByClassName && function(className,context){if(documentIsHTML){return context.getElementsByClassName(className);}}; /* QSA/matchesSelector\n\t---------------------------------------------------------------------- */ // QSA and matchesSelector support\n// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\nrbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n// We allow this because of a bug in IE8/9 that throws an error\n// whenever `document.activeElement` is accessed on an iframe\n// So, we allow :focus to pass through QSA all the time to avoid the IE error\n// See http://bugs.jquery.com/ticket/13378\nrbuggyQSA = [];if(support.qsa = rnative.test(doc.querySelectorAll)){ // Build QSA regex\n// Regex strategy adopted from Diego Perini\nassert(function(div){ // Select is set to empty string on purpose\n// This is to test IE's treatment of not explicitly\n// setting a boolean content attribute,\n// since its presence should be enough\n// http://bugs.jquery.com/ticket/12359\ndocElem.appendChild(div).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\f]' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n// Nothing should be selected when empty strings follow ^= or $= or *=\n// The test attribute must be unknown in Opera but \"safe\" for WinRT\n// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\nif(div.querySelectorAll(\"[msallowcapture^='']\").length){rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");} // Support: IE8\n// Boolean attributes and \"value\" are not treated correctly\nif(!div.querySelectorAll(\"[selected]\").length){rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");} // Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+\nif(!div.querySelectorAll(\"[id~=\" + expando + \"-]\").length){rbuggyQSA.push(\"~=\");} // Webkit/Opera - :checked should return selected option elements\n// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n// IE8 throws error here and will not see later tests\nif(!div.querySelectorAll(\":checked\").length){rbuggyQSA.push(\":checked\");} // Support: Safari 8+, iOS 8+\n// https://bugs.webkit.org/show_bug.cgi?id=136851\n// In-page `selector#id sibing-combinator selector` fails\nif(!div.querySelectorAll(\"a#\" + expando + \"+*\").length){rbuggyQSA.push(\".#.+[+~]\");}});assert(function(div){ // Support: Windows 8 Native Apps\n// The type and name attributes are restricted during .innerHTML assignment\nvar input=doc.createElement(\"input\");input.setAttribute(\"type\",\"hidden\");div.appendChild(input).setAttribute(\"name\",\"D\"); // Support: IE8\n// Enforce case-sensitivity of name attribute\nif(div.querySelectorAll(\"[name=d]\").length){rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");} // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n// IE8 throws error here and will not see later tests\nif(!div.querySelectorAll(\":enabled\").length){rbuggyQSA.push(\":enabled\",\":disabled\");} // Opera 10-11 does not throw on post-comma invalid pseudos\ndiv.querySelectorAll(\"*,:x\");rbuggyQSA.push(\",.*:\");});}if(support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)){assert(function(div){ // Check to see if it's possible to do matchesSelector\n// on a disconnected node (IE 9)\nsupport.disconnectedMatch = matches.call(div,\"div\"); // This should fail with an exception\n// Gecko does not error, returns false instead\nmatches.call(div,\"[s!='']:x\");rbuggyMatches.push(\"!=\",pseudos);});}rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\")); /* Contains\n\t---------------------------------------------------------------------- */hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n// Purposefully does not implement inclusive descendent\n// As in, an element does not contain itself\ncontains = hasCompare || rnative.test(docElem.contains)?function(a,b){var adown=a.nodeType === 9?a.documentElement:a,bup=b && b.parentNode;return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains?adown.contains(bup):a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));}:function(a,b){if(b){while(b = b.parentNode) {if(b === a){return true;}}}return false;}; /* Sorting\n\t---------------------------------------------------------------------- */ // Document order sorting\nsortOrder = hasCompare?function(a,b){ // Flag for duplicate removal\nif(a === b){hasDuplicate = true;return 0;} // Sort on method existence if only one input has compareDocumentPosition\nvar compare=!a.compareDocumentPosition - !b.compareDocumentPosition;if(compare){return compare;} // Calculate position if both inputs belong to the same document\ncompare = (a.ownerDocument || a) === (b.ownerDocument || b)?a.compareDocumentPosition(b): // Otherwise we know they are disconnected\n1; // Disconnected nodes\nif(compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare){ // Choose the first element that is related to our preferred document\nif(a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc,a)){return -1;}if(b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc,b)){return 1;} // Maintain original order\nreturn sortInput?indexOf(sortInput,a) - indexOf(sortInput,b):0;}return compare & 4?-1:1;}:function(a,b){ // Exit early if the nodes are identical\nif(a === b){hasDuplicate = true;return 0;}var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b]; // Parentless nodes are either documents or disconnected\nif(!aup || !bup){return a === doc?-1:b === doc?1:aup?-1:bup?1:sortInput?indexOf(sortInput,a) - indexOf(sortInput,b):0; // If the nodes are siblings, we can do a quick check\n}else if(aup === bup){return siblingCheck(a,b);} // Otherwise we need full lists of their ancestors for comparison\ncur = a;while(cur = cur.parentNode) {ap.unshift(cur);}cur = b;while(cur = cur.parentNode) {bp.unshift(cur);} // Walk down the tree looking for a discrepancy\nwhile(ap[i] === bp[i]) {i++;}return i? // Do a sibling check if the nodes have a common ancestor\nsiblingCheck(ap[i],bp[i]): // Otherwise nodes in our document sort first\nap[i] === preferredDoc?-1:bp[i] === preferredDoc?1:0;};return doc;};Sizzle.matches = function(expr,elements){return Sizzle(expr,null,null,elements);};Sizzle.matchesSelector = function(elem,expr){ // Set document vars if needed\nif((elem.ownerDocument || elem) !== document){setDocument(elem);} // Make sure that attribute selectors are quoted\nexpr = expr.replace(rattributeQuotes,\"='$1']\");if(support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))){try{var ret=matches.call(elem,expr); // IE 9's matchesSelector returns false on disconnected nodes\nif(ret || support.disconnectedMatch ||  // As well, disconnected nodes are said to be in a document\n// fragment in IE 9\nelem.document && elem.document.nodeType !== 11){return ret;}}catch(e) {}}return Sizzle(expr,document,null,[elem]).length > 0;};Sizzle.contains = function(context,elem){ // Set document vars if needed\nif((context.ownerDocument || context) !== document){setDocument(context);}return contains(context,elem);};Sizzle.attr = function(elem,name){ // Set document vars if needed\nif((elem.ownerDocument || elem) !== document){setDocument(elem);}var fn=Expr.attrHandle[name.toLowerCase()], // Don't get fooled by Object.prototype properties (jQuery #13807)\nval=fn && hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):undefined;return val !== undefined?val:support.attributes || !documentIsHTML?elem.getAttribute(name):(val = elem.getAttributeNode(name)) && val.specified?val.value:null;};Sizzle.error = function(msg){throw new Error(\"Syntax error, unrecognized expression: \" + msg);}; /**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */Sizzle.uniqueSort = function(results){var elem,duplicates=[],j=0,i=0; // Unless we *know* we can detect duplicates, assume their presence\nhasDuplicate = !support.detectDuplicates;sortInput = !support.sortStable && results.slice(0);results.sort(sortOrder);if(hasDuplicate){while(elem = results[i++]) {if(elem === results[i]){j = duplicates.push(i);}}while(j--) {results.splice(duplicates[j],1);}} // Clear input after sorting to release objects\n// See https://github.com/jquery/sizzle/pull/225\nsortInput = null;return results;}; /**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */getText = Sizzle.getText = function(elem){var node,ret=\"\",i=0,nodeType=elem.nodeType;if(!nodeType){ // If no nodeType, this is expected to be an array\nwhile(node = elem[i++]) { // Do not traverse comment nodes\nret += getText(node);}}else if(nodeType === 1 || nodeType === 9 || nodeType === 11){ // Use textContent for elements\n// innerText usage removed for consistency of new lines (jQuery #11153)\nif(typeof elem.textContent === \"string\"){return elem.textContent;}else { // Traverse its children\nfor(elem = elem.firstChild;elem;elem = elem.nextSibling) {ret += getText(elem);}}}else if(nodeType === 3 || nodeType === 4){return elem.nodeValue;} // Do not include comment or processing instruction nodes\nreturn ret;};Expr = Sizzle.selectors = { // Can be adjusted by the user\ncacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:true},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:true},\"~\":{dir:\"previousSibling\"}},preFilter:{\"ATTR\":function ATTR(match){match[1] = match[1].replace(runescape,funescape); // Move the given value to match[3] whether quoted or unquoted\nmatch[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape,funescape);if(match[2] === \"~=\"){match[3] = \" \" + match[3] + \" \";}return match.slice(0,4);},\"CHILD\":function CHILD(match){ /* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/match[1] = match[1].toLowerCase();if(match[1].slice(0,3) === \"nth\"){ // nth-* requires argument\nif(!match[3]){Sizzle.error(match[0]);} // numeric x and y parameters for Expr.filter.CHILD\n// remember that false/true cast respectively to 0/1\nmatch[4] = +(match[4]?match[5] + (match[6] || 1):2 * (match[3] === \"even\" || match[3] === \"odd\"));match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n}else if(match[3]){Sizzle.error(match[0]);}return match;},\"PSEUDO\":function PSEUDO(match){var excess,unquoted=!match[6] && match[2];if(matchExpr[\"CHILD\"].test(match[0])){return null;} // Accept quoted arguments as-is\nif(match[3]){match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n}else if(unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\nexcess = tokenize(unquoted,true)) && ( // advance to the next closing parenthesis\nexcess = unquoted.indexOf(\")\",unquoted.length - excess) - unquoted.length)){ // excess is a negative index\nmatch[0] = match[0].slice(0,excess);match[2] = unquoted.slice(0,excess);} // Return only captures needed by the pseudo filter method (type and argument)\nreturn match.slice(0,3);}},filter:{\"TAG\":function TAG(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return nodeNameSelector === \"*\"?function(){return true;}:function(elem){return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;};},\"CLASS\":function CLASS(className){var pattern=classCache[className + \" \"];return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className,function(elem){return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");});},\"ATTR\":function ATTR(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);if(result == null){return operator === \"!=\";}if(!operator){return true;}result += \"\";return operator === \"=\"?result === check:operator === \"!=\"?result !== check:operator === \"^=\"?check && result.indexOf(check) === 0:operator === \"*=\"?check && result.indexOf(check) > -1:operator === \"$=\"?check && result.slice(-check.length) === check:operator === \"~=\"?(\" \" + result.replace(rwhitespace,\" \") + \" \").indexOf(check) > -1:operator === \"|=\"?result === check || result.slice(0,check.length + 1) === check + \"-\":false;};},\"CHILD\":function CHILD(type,what,argument,first,last){var simple=type.slice(0,3) !== \"nth\",forward=type.slice(-4) !== \"last\",ofType=what === \"of-type\";return first === 1 && last === 0? // Shortcut for :nth-*(n)\nfunction(elem){return !!elem.parentNode;}:function(elem,context,xml){var cache,outerCache,node,diff,nodeIndex,start,dir=simple !== forward?\"nextSibling\":\"previousSibling\",parent=elem.parentNode,name=ofType && elem.nodeName.toLowerCase(),useCache=!xml && !ofType;if(parent){ // :(first|last|only)-(child|of-type)\nif(simple){while(dir) {node = elem;while(node = node[dir]) {if(ofType?node.nodeName.toLowerCase() === name:node.nodeType === 1){return false;}} // Reverse direction for :only-* (if we haven't yet done so)\nstart = dir = type === \"only\" && !start && \"nextSibling\";}return true;}start = [forward?parent.firstChild:parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\nif(forward && useCache){ // Seek `elem` from a previously-cached index\nouterCache = parent[expando] || (parent[expando] = {});cache = outerCache[type] || [];nodeIndex = cache[0] === dirruns && cache[1];diff = cache[0] === dirruns && cache[2];node = nodeIndex && parent.childNodes[nodeIndex];while(node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\ndiff = nodeIndex = 0) || start.pop()) { // When found, cache indexes on `parent` and break\nif(node.nodeType === 1 && ++diff && node === elem){outerCache[type] = [dirruns,nodeIndex,diff];break;}} // Use previously-cached element index if available\n}else if(useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns){diff = cache[1]; // xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n}else { // Use the same loop as above to seek `elem` from the start\nwhile(node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {if((ofType?node.nodeName.toLowerCase() === name:node.nodeType === 1) && ++diff){ // Cache the index of each encountered element\nif(useCache){(node[expando] || (node[expando] = {}))[type] = [dirruns,diff];}if(node === elem){break;}}}} // Incorporate the offset, then check against cycle size\ndiff -= last;return diff === first || diff % first === 0 && diff / first >= 0;}};},\"PSEUDO\":function PSEUDO(pseudo,argument){ // pseudo-class names are case-insensitive\n// http://www.w3.org/TR/selectors/#pseudo-classes\n// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n// Remember that setFilters inherits from pseudos\nvar args,fn=Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n// arguments are needed to create the filter function\n// just as Sizzle does\nif(fn[expando]){return fn(argument);} // But maintain support for old signatures\nif(fn.length > 1){args = [pseudo,pseudo,\"\",argument];return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){var idx,matched=fn(seed,argument),i=matched.length;while(i--) {idx = indexOf(seed,matched[i]);seed[idx] = !(matches[idx] = matched[i]);}}):function(elem){return fn(elem,0,args);};}return fn;}},pseudos:{ // Potentially complex pseudos\n\"not\":markFunction(function(selector){ // Trim the selector passed to compile\n// to avoid treating leading and trailing\n// spaces as combinators\nvar input=[],results=[],matcher=compile(selector.replace(rtrim,\"$1\"));return matcher[expando]?markFunction(function(seed,matches,context,xml){var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length; // Match elements unmatched by `matcher`\nwhile(i--) {if(elem = unmatched[i]){seed[i] = !(matches[i] = elem);}}}):function(elem,context,xml){input[0] = elem;matcher(input,null,xml,results); // Don't keep the element (issue #299)\ninput[0] = null;return !results.pop();};}),\"has\":markFunction(function(selector){return function(elem){return Sizzle(selector,elem).length > 0;};}),\"contains\":markFunction(function(text){text = text.replace(runescape,funescape);return function(elem){return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;};}), // \"Whether an element is represented by a :lang() selector\n// is based solely on the element's language value\n// being equal to the identifier C,\n// or beginning with the identifier C immediately followed by \"-\".\n// The matching of C against the element's language value is performed case-insensitively.\n// The identifier C does not have to be a valid language name.\"\n// http://www.w3.org/TR/selectors/#lang-pseudo\n\"lang\":markFunction(function(lang){ // lang value must be a valid identifier\nif(!ridentifier.test(lang || \"\")){Sizzle.error(\"unsupported lang: \" + lang);}lang = lang.replace(runescape,funescape).toLowerCase();return function(elem){var elemLang;do {if(elemLang = documentIsHTML?elem.lang:elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")){elemLang = elemLang.toLowerCase();return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;}}while((elem = elem.parentNode) && elem.nodeType === 1);return false;};}), // Miscellaneous\n\"target\":function target(elem){var hash=window.location && window.location.hash;return hash && hash.slice(1) === elem.id;},\"root\":function root(elem){return elem === docElem;},\"focus\":function focus(elem){return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);}, // Boolean properties\n\"enabled\":function enabled(elem){return elem.disabled === false;},\"disabled\":function disabled(elem){return elem.disabled === true;},\"checked\":function checked(elem){ // In CSS3, :checked should return both checked and selected elements\n// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\nvar nodeName=elem.nodeName.toLowerCase();return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;},\"selected\":function selected(elem){ // Accessing this property makes selected-by-default\n// options in Safari work properly\nif(elem.parentNode){elem.parentNode.selectedIndex;}return elem.selected === true;}, // Contents\n\"empty\":function empty(elem){ // http://www.w3.org/TR/selectors/#empty-pseudo\n// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n//   but not by others (comment: 8; processing instruction: 7; etc.)\n// nodeType < 6 works because attributes (2) do not appear as children\nfor(elem = elem.firstChild;elem;elem = elem.nextSibling) {if(elem.nodeType < 6){return false;}}return true;},\"parent\":function parent(elem){return !Expr.pseudos[\"empty\"](elem);}, // Element/input types\n\"header\":function header(elem){return rheader.test(elem.nodeName);},\"input\":function input(elem){return rinputs.test(elem.nodeName);},\"button\":function button(elem){var name=elem.nodeName.toLowerCase();return name === \"input\" && elem.type === \"button\" || name === \"button\";},\"text\":function text(elem){var attr;return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n(attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");}, // Position-in-collection\n\"first\":createPositionalPseudo(function(){return [0];}),\"last\":createPositionalPseudo(function(matchIndexes,length){return [length - 1];}),\"eq\":createPositionalPseudo(function(matchIndexes,length,argument){return [argument < 0?argument + length:argument];}),\"even\":createPositionalPseudo(function(matchIndexes,length){var i=0;for(;i < length;i += 2) {matchIndexes.push(i);}return matchIndexes;}),\"odd\":createPositionalPseudo(function(matchIndexes,length){var i=1;for(;i < length;i += 2) {matchIndexes.push(i);}return matchIndexes;}),\"lt\":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument < 0?argument + length:argument;for(;--i >= 0;) {matchIndexes.push(i);}return matchIndexes;}),\"gt\":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument < 0?argument + length:argument;for(;++i < length;) {matchIndexes.push(i);}return matchIndexes;})}};Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\nfor(i in {radio:true,checkbox:true,file:true,password:true,image:true}) {Expr.pseudos[i] = createInputPseudo(i);}for(i in {submit:true,reset:true}) {Expr.pseudos[i] = createButtonPseudo(i);} // Easy API for creating new setFilters\nfunction setFilters(){}setFilters.prototype = Expr.filters = Expr.pseudos;Expr.setFilters = new setFilters();tokenize = Sizzle.tokenize = function(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector + \" \"];if(cached){return parseOnly?0:cached.slice(0);}soFar = selector;groups = [];preFilters = Expr.preFilter;while(soFar) { // Comma and first run\nif(!matched || (match = rcomma.exec(soFar))){if(match){ // Don't consume trailing commas as valid\nsoFar = soFar.slice(match[0].length) || soFar;}groups.push(tokens = []);}matched = false; // Combinators\nif(match = rcombinators.exec(soFar)){matched = match.shift();tokens.push({value:matched, // Cast descendant combinators to space\ntype:match[0].replace(rtrim,\" \")});soFar = soFar.slice(matched.length);} // Filters\nfor(type in Expr.filter) {if((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))){matched = match.shift();tokens.push({value:matched,type:type,matches:match});soFar = soFar.slice(matched.length);}}if(!matched){break;}} // Return the length of the invalid excess\n// if we're just parsing\n// Otherwise, throw an error or return tokens\nreturn parseOnly?soFar.length:soFar?Sizzle.error(selector): // Cache the tokens\ntokenCache(selector,groups).slice(0);};function toSelector(tokens){var i=0,len=tokens.length,selector=\"\";for(;i < len;i++) {selector += tokens[i].value;}return selector;}function addCombinator(matcher,combinator,base){var dir=combinator.dir,checkNonElements=base && dir === \"parentNode\",doneName=done++;return combinator.first? // Check against closest ancestor/preceding element\nfunction(elem,context,xml){while(elem = elem[dir]) {if(elem.nodeType === 1 || checkNonElements){return matcher(elem,context,xml);}}}: // Check against all ancestor/preceding elements\nfunction(elem,context,xml){var oldCache,outerCache,newCache=[dirruns,doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\nif(xml){while(elem = elem[dir]) {if(elem.nodeType === 1 || checkNonElements){if(matcher(elem,context,xml)){return true;}}}}else {while(elem = elem[dir]) {if(elem.nodeType === 1 || checkNonElements){outerCache = elem[expando] || (elem[expando] = {});if((oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName){ // Assign to newCache so results back-propagate to previous elements\nreturn newCache[2] = oldCache[2];}else { // Reuse newcache so results back-propagate to previous elements\nouterCache[dir] = newCache; // A match means we're done; a fail means we have to keep checking\nif(newCache[2] = matcher(elem,context,xml)){return true;}}}}}};}function elementMatcher(matchers){return matchers.length > 1?function(elem,context,xml){var i=matchers.length;while(i--) {if(!matchers[i](elem,context,xml)){return false;}}return true;}:matchers[0];}function multipleContexts(selector,contexts,results){var i=0,len=contexts.length;for(;i < len;i++) {Sizzle(selector,contexts[i],results);}return results;}function condense(unmatched,map,filter,context,xml){var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=map != null;for(;i < len;i++) {if(elem = unmatched[i]){if(!filter || filter(elem,context,xml)){newUnmatched.push(elem);if(mapped){map.push(i);}}}}return newUnmatched;}function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){if(postFilter && !postFilter[expando]){postFilter = setMatcher(postFilter);}if(postFinder && !postFinder[expando]){postFinder = setMatcher(postFinder,postSelector);}return markFunction(function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length, // Get initial elements from seed or context\nelems=seed || multipleContexts(selector || \"*\",context.nodeType?[context]:context,[]), // Prefilter to get matcher input, preserving a map for seed-results synchronization\nmatcherIn=preFilter && (seed || !selector)?condense(elems,preMap,preFilter,context,xml):elems,matcherOut=matcher? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\npostFinder || (seed?preFilter:preexisting || postFilter)? // ...intermediate processing is necessary\n[]: // ...otherwise use results directly\nresults:matcherIn; // Find primary matches\nif(matcher){matcher(matcherIn,matcherOut,context,xml);} // Apply postFilter\nif(postFilter){temp = condense(matcherOut,postMap);postFilter(temp,[],context,xml); // Un-match failing elements by moving them back to matcherIn\ni = temp.length;while(i--) {if(elem = temp[i]){matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);}}}if(seed){if(postFinder || preFilter){if(postFinder){ // Get the final matcherOut by condensing this intermediate into postFinder contexts\ntemp = [];i = matcherOut.length;while(i--) {if(elem = matcherOut[i]){ // Restore matcherIn since elem is not yet a final match\ntemp.push(matcherIn[i] = elem);}}postFinder(null,matcherOut = [],temp,xml);} // Move matched elements from seed to results to keep them synchronized\ni = matcherOut.length;while(i--) {if((elem = matcherOut[i]) && (temp = postFinder?indexOf(seed,elem):preMap[i]) > -1){seed[temp] = !(results[temp] = elem);}}} // Add elements to results, through postFinder if defined\n}else {matcherOut = condense(matcherOut === results?matcherOut.splice(preexisting,matcherOut.length):matcherOut);if(postFinder){postFinder(null,results,matcherOut,xml);}else {push.apply(results,matcherOut);}}});}function matcherFromTokens(tokens){var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative || Expr.relative[\" \"],i=leadingRelative?1:0, // The foundational matcher ensures that elements are reachable from top-level context(s)\nmatchContext=addCombinator(function(elem){return elem === checkContext;},implicitRelative,true),matchAnyContext=addCombinator(function(elem){return indexOf(checkContext,elem) > -1;},implicitRelative,true),matchers=[function(elem,context,xml){var ret=!leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml)); // Avoid hanging onto element (issue #299)\ncheckContext = null;return ret;}];for(;i < len;i++) {if(matcher = Expr.relative[tokens[i].type]){matchers = [addCombinator(elementMatcher(matchers),matcher)];}else {matcher = Expr.filter[tokens[i].type].apply(null,tokens[i].matches); // Return special upon seeing a positional matcher\nif(matcher[expando]){ // Find the next relative operator (if any) for proper handling\nj = ++i;for(;j < len;j++) {if(Expr.relative[tokens[j].type]){break;}}return setMatcher(i > 1 && elementMatcher(matchers),i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\ntokens.slice(0,i - 1).concat({value:tokens[i - 2].type === \" \"?\"*\":\"\"})).replace(rtrim,\"$1\"),matcher,i < j && matcherFromTokens(tokens.slice(i,j)),j < len && matcherFromTokens(tokens = tokens.slice(j)),j < len && toSelector(tokens));}matchers.push(matcher);}}return elementMatcher(matchers);}function matcherFromGroupMatchers(elementMatchers,setMatchers){var bySet=setMatchers.length > 0,byElement=elementMatchers.length > 0,superMatcher=function superMatcher(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i=\"0\",unmatched=seed && [],setMatched=[],contextBackup=outermostContext, // We must always have either seed elements or outermost context\nelems=seed || byElement && Expr.find[\"TAG\"](\"*\",outermost), // Use integer dirruns iff this is the outermost matcher\ndirrunsUnique=dirruns += contextBackup == null?1:Math.random() || 0.1,len=elems.length;if(outermost){outermostContext = context !== document && context;} // Add elements passing elementMatchers directly to results\n// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n// Support: IE<9, Safari\n// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\nfor(;i !== len && (elem = elems[i]) != null;i++) {if(byElement && elem){j = 0;while(matcher = elementMatchers[j++]) {if(matcher(elem,context,xml)){results.push(elem);break;}}if(outermost){dirruns = dirrunsUnique;}} // Track unmatched elements for set filters\nif(bySet){ // They will have gone through all possible matchers\nif(elem = !matcher && elem){matchedCount--;} // Lengthen the array for every element, matched or not\nif(seed){unmatched.push(elem);}}} // Apply set filters to unmatched elements\nmatchedCount += i;if(bySet && i !== matchedCount){j = 0;while(matcher = setMatchers[j++]) {matcher(unmatched,setMatched,context,xml);}if(seed){ // Reintegrate element matches to eliminate the need for sorting\nif(matchedCount > 0){while(i--) {if(!(unmatched[i] || setMatched[i])){setMatched[i] = pop.call(results);}}} // Discard index placeholder values to get only actual matches\nsetMatched = condense(setMatched);} // Add matches to results\npush.apply(results,setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\nif(outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1){Sizzle.uniqueSort(results);}} // Override manipulation of globals by nested matchers\nif(outermost){dirruns = dirrunsUnique;outermostContext = contextBackup;}return unmatched;};return bySet?markFunction(superMatcher):superMatcher;}compile = Sizzle.compile = function(selector,match /* Internal Use Only */){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector + \" \"];if(!cached){ // Generate a function of recursive functions that can be used to check each element\nif(!match){match = tokenize(selector);}i = match.length;while(i--) {cached = matcherFromTokens(match[i]);if(cached[expando]){setMatchers.push(cached);}else {elementMatchers.push(cached);}} // Cache the compiled function\ncached = compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers)); // Save selector and tokenization\ncached.selector = selector;}return cached;}; /**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */select = Sizzle.select = function(selector,context,results,seed){var i,tokens,token,type,find,compiled=typeof selector === \"function\" && selector,match=!seed && tokenize(selector = compiled.selector || selector);results = results || []; // Try to minimize operations if there is no seed and only one group\nif(match.length === 1){ // Take a shortcut and set the context if the root selector is an ID\ntokens = match[0] = match[0].slice(0);if(tokens.length > 2 && (token = tokens[0]).type === \"ID\" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]){context = (Expr.find[\"ID\"](token.matches[0].replace(runescape,funescape),context) || [])[0];if(!context){return results; // Precompiled matchers will still verify ancestry, so step up a level\n}else if(compiled){context = context.parentNode;}selector = selector.slice(tokens.shift().value.length);} // Fetch a seed set for right-to-left matching\ni = matchExpr[\"needsContext\"].test(selector)?0:tokens.length;while(i--) {token = tokens[i]; // Abort if we hit a combinator\nif(Expr.relative[type = token.type]){break;}if(find = Expr.find[type]){ // Search, expanding context for leading sibling combinators\nif(seed = find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)){ // If seed is empty or no tokens remain, we can return early\ntokens.splice(i,1);selector = seed.length && toSelector(tokens);if(!selector){push.apply(results,seed);return results;}break;}}}} // Compile and execute a filtering function if one is not provided\n// Provide `match` to avoid retokenization if we modified the selector above\n(compiled || compile(selector,match))(seed,context,!documentIsHTML,results,rsibling.test(selector) && testContext(context.parentNode) || context);return results;}; // One-time assignments\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate; // Initialize against the default document\nsetDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function(div1){ // Should return 1, but returns 4 (following)\nreturn div1.compareDocumentPosition(document.createElement(\"div\")) & 1;}); // Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif(!assert(function(div){div.innerHTML = \"<a href='#'></a>\";return div.firstChild.getAttribute(\"href\") === \"#\";})){addHandle(\"type|href|height|width\",function(elem,name,isXML){if(!isXML){return elem.getAttribute(name,name.toLowerCase() === \"type\"?1:2);}});} // Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif(!support.attributes || !assert(function(div){div.innerHTML = \"<input/>\";div.firstChild.setAttribute(\"value\",\"\");return div.firstChild.getAttribute(\"value\") === \"\";})){addHandle(\"value\",function(elem,name,isXML){if(!isXML && elem.nodeName.toLowerCase() === \"input\"){return elem.defaultValue;}});} // Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif(!assert(function(div){return div.getAttribute(\"disabled\") == null;})){addHandle(booleans,function(elem,name,isXML){var val;if(!isXML){return elem[name] === true?name.toLowerCase():(val = elem.getAttributeNode(name)) && val.specified?val.value:null;}});}return Sizzle;})(window);jQuery.find = Sizzle;jQuery.expr = Sizzle.selectors;jQuery.expr[\":\"] = jQuery.expr.pseudos;jQuery.unique = Sizzle.uniqueSort;jQuery.text = Sizzle.getText;jQuery.isXMLDoc = Sizzle.isXML;jQuery.contains = Sizzle.contains;var rneedsContext=jQuery.expr.match.needsContext;var rsingleTag=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;var risSimple=/^.[^:#\\[\\.,]*$/; // Implement the identical functionality for filter and not\nfunction winnow(elements,qualifier,not){if(jQuery.isFunction(qualifier)){return jQuery.grep(elements,function(elem,i){ /* jshint -W018 */return !!qualifier.call(elem,i,elem) !== not;});}if(qualifier.nodeType){return jQuery.grep(elements,function(elem){return elem === qualifier !== not;});}if(typeof qualifier === \"string\"){if(risSimple.test(qualifier)){return jQuery.filter(qualifier,elements,not);}qualifier = jQuery.filter(qualifier,elements);}return jQuery.grep(elements,function(elem){return indexOf.call(qualifier,elem) >= 0 !== not;});}jQuery.filter = function(expr,elems,not){var elem=elems[0];if(not){expr = \":not(\" + expr + \")\";}return elems.length === 1 && elem.nodeType === 1?jQuery.find.matchesSelector(elem,expr)?[elem]:[]:jQuery.find.matches(expr,jQuery.grep(elems,function(elem){return elem.nodeType === 1;}));};jQuery.fn.extend({find:function find(selector){var i,len=this.length,ret=[],self=this;if(typeof selector !== \"string\"){return this.pushStack(jQuery(selector).filter(function(){for(i = 0;i < len;i++) {if(jQuery.contains(self[i],this)){return true;}}}));}for(i = 0;i < len;i++) {jQuery.find(selector,self[i],ret);} // Needed because $( selector, context ) becomes $( context ).find( selector )\nret = this.pushStack(len > 1?jQuery.unique(ret):ret);ret.selector = this.selector?this.selector + \" \" + selector:selector;return ret;},filter:function filter(selector){return this.pushStack(winnow(this,selector || [],false));},not:function not(selector){return this.pushStack(winnow(this,selector || [],true));},is:function is(selector){return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\ntypeof selector === \"string\" && rneedsContext.test(selector)?jQuery(selector):selector || [],false).length;}}); // Initialize a jQuery object\n// A central reference to the root jQuery(document)\nvar rootjQuery, // A simple way to check for HTML strings\n// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n// Strict HTML recognition (#11290: must start with <)\nrquickExpr=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,init=jQuery.fn.init = function(selector,context){var match,elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\nif(!selector){return this;} // Handle HTML strings\nif(typeof selector === \"string\"){if(selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3){ // Assume that strings that start and end with <> are HTML and skip the regex check\nmatch = [null,selector,null];}else {match = rquickExpr.exec(selector);} // Match html or make sure no context is specified for #id\nif(match && (match[1] || !context)){ // HANDLE: $(html) -> $(array)\nif(match[1]){context = context instanceof jQuery?context[0]:context; // Option to run scripts is true for back-compat\n// Intentionally let the error be thrown if parseHTML is not present\njQuery.merge(this,jQuery.parseHTML(match[1],context && context.nodeType?context.ownerDocument || context:document,true)); // HANDLE: $(html, props)\nif(rsingleTag.test(match[1]) && jQuery.isPlainObject(context)){for(match in context) { // Properties of context are called as methods if possible\nif(jQuery.isFunction(this[match])){this[match](context[match]); // ...and otherwise set as attributes\n}else {this.attr(match,context[match]);}}}return this; // HANDLE: $(#id)\n}else {elem = document.getElementById(match[2]); // Support: Blackberry 4.6\n// gEBID returns nodes no longer in the document (#6963)\nif(elem && elem.parentNode){ // Inject the element directly into the jQuery object\nthis.length = 1;this[0] = elem;}this.context = document;this.selector = selector;return this;} // HANDLE: $(expr, $(...))\n}else if(!context || context.jquery){return (context || rootjQuery).find(selector); // HANDLE: $(expr, context)\n// (which is just equivalent to: $(context).find(expr)\n}else {return this.constructor(context).find(selector);} // HANDLE: $(DOMElement)\n}else if(selector.nodeType){this.context = this[0] = selector;this.length = 1;return this; // HANDLE: $(function)\n// Shortcut for document ready\n}else if(jQuery.isFunction(selector)){return typeof rootjQuery.ready !== \"undefined\"?rootjQuery.ready(selector): // Execute immediately if ready is not present\nselector(jQuery);}if(selector.selector !== undefined){this.selector = selector.selector;this.context = selector.context;}return jQuery.makeArray(selector,this);}; // Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn; // Initialize central reference\nrootjQuery = jQuery(document);var rparentsprev=/^(?:parents|prev(?:Until|All))/, // Methods guaranteed to produce a unique set when starting from a unique set\nguaranteedUnique={children:true,contents:true,next:true,prev:true};jQuery.extend({dir:function dir(elem,_dir,until){var matched=[],truncate=until !== undefined;while((elem = elem[_dir]) && elem.nodeType !== 9) {if(elem.nodeType === 1){if(truncate && jQuery(elem).is(until)){break;}matched.push(elem);}}return matched;},sibling:function sibling(n,elem){var matched=[];for(;n;n = n.nextSibling) {if(n.nodeType === 1 && n !== elem){matched.push(n);}}return matched;}});jQuery.fn.extend({has:function has(target){var targets=jQuery(target,this),l=targets.length;return this.filter(function(){var i=0;for(;i < l;i++) {if(jQuery.contains(this,targets[i])){return true;}}});},closest:function closest(selectors,context){var cur,i=0,l=this.length,matched=[],pos=rneedsContext.test(selectors) || typeof selectors !== \"string\"?jQuery(selectors,context || this.context):0;for(;i < l;i++) {for(cur = this[i];cur && cur !== context;cur = cur.parentNode) { // Always skip document fragments\nif(cur.nodeType < 11 && (pos?pos.index(cur) > -1: // Don't pass non-elements to Sizzle\ncur.nodeType === 1 && jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break;}}}return this.pushStack(matched.length > 1?jQuery.unique(matched):matched);}, // Determine the position of an element within the set\nindex:function index(elem){ // No argument, return index in parent\nif(!elem){return this[0] && this[0].parentNode?this.first().prevAll().length:-1;} // Index in selector\nif(typeof elem === \"string\"){return indexOf.call(jQuery(elem),this[0]);} // Locate the position of the desired element\nreturn indexOf.call(this, // If it receives a jQuery object, the first element is used\nelem.jquery?elem[0]:elem);},add:function add(selector,context){return this.pushStack(jQuery.unique(jQuery.merge(this.get(),jQuery(selector,context))));},addBack:function addBack(selector){return this.add(selector == null?this.prevObject:this.prevObject.filter(selector));}});function sibling(cur,dir){while((cur = cur[dir]) && cur.nodeType !== 1) {}return cur;}jQuery.each({parent:function parent(elem){var parent=elem.parentNode;return parent && parent.nodeType !== 11?parent:null;},parents:function parents(elem){return jQuery.dir(elem,\"parentNode\");},parentsUntil:function parentsUntil(elem,i,until){return jQuery.dir(elem,\"parentNode\",until);},next:function next(elem){return sibling(elem,\"nextSibling\");},prev:function prev(elem){return sibling(elem,\"previousSibling\");},nextAll:function nextAll(elem){return jQuery.dir(elem,\"nextSibling\");},prevAll:function prevAll(elem){return jQuery.dir(elem,\"previousSibling\");},nextUntil:function nextUntil(elem,i,until){return jQuery.dir(elem,\"nextSibling\",until);},prevUntil:function prevUntil(elem,i,until){return jQuery.dir(elem,\"previousSibling\",until);},siblings:function siblings(elem){return jQuery.sibling((elem.parentNode || {}).firstChild,elem);},children:function children(elem){return jQuery.sibling(elem.firstChild);},contents:function contents(elem){return elem.contentDocument || jQuery.merge([],elem.childNodes);}},function(name,fn){jQuery.fn[name] = function(until,selector){var matched=jQuery.map(this,fn,until);if(name.slice(-5) !== \"Until\"){selector = until;}if(selector && typeof selector === \"string\"){matched = jQuery.filter(selector,matched);}if(this.length > 1){ // Remove duplicates\nif(!guaranteedUnique[name]){jQuery.unique(matched);} // Reverse order for parents* and prev-derivatives\nif(rparentsprev.test(name)){matched.reverse();}}return this.pushStack(matched);};});var rnotwhite=/\\S+/g; // String to Object options format cache\nvar optionsCache={}; // Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions(options){var object=optionsCache[options] = {};jQuery.each(options.match(rnotwhite) || [],function(_,flag){object[flag] = true;});return object;} /*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */jQuery.Callbacks = function(options){ // Convert options from String-formatted to Object-formatted if needed\n// (we check in cache first)\noptions = typeof options === \"string\"?optionsCache[options] || createOptions(options):jQuery.extend({},options);var  // Last fire value (for non-forgettable lists)\nmemory, // Flag to know if list was already fired\n_fired, // Flag to know if list is currently firing\nfiring, // First callback to fire (used internally by add and fireWith)\nfiringStart, // End of the loop when firing\nfiringLength, // Index of currently firing callback (modified by remove if needed)\nfiringIndex, // Actual callback list\nlist=[], // Stack of fire calls for repeatable lists\nstack=!options.once && [], // Fire callbacks\nfire=function fire(data){memory = options.memory && data;_fired = true;firingIndex = firingStart || 0;firingStart = 0;firingLength = list.length;firing = true;for(;list && firingIndex < firingLength;firingIndex++) {if(list[firingIndex].apply(data[0],data[1]) === false && options.stopOnFalse){memory = false; // To prevent further calls using add\nbreak;}}firing = false;if(list){if(stack){if(stack.length){fire(stack.shift());}}else if(memory){list = [];}else {self.disable();}}}, // Actual Callbacks object\nself={ // Add a callback or a collection of callbacks to the list\nadd:function add(){if(list){ // First, we save the current length\nvar start=list.length;(function add(args){jQuery.each(args,function(_,arg){var type=jQuery.type(arg);if(type === \"function\"){if(!options.unique || !self.has(arg)){list.push(arg);}}else if(arg && arg.length && type !== \"string\"){ // Inspect recursively\nadd(arg);}});})(arguments); // Do we need to add the callbacks to the\n// current firing batch?\nif(firing){firingLength = list.length; // With memory, if we're not firing then\n// we should call right away\n}else if(memory){firingStart = start;fire(memory);}}return this;}, // Remove a callback from the list\nremove:function remove(){if(list){jQuery.each(arguments,function(_,arg){var index;while((index = jQuery.inArray(arg,list,index)) > -1) {list.splice(index,1); // Handle firing indexes\nif(firing){if(index <= firingLength){firingLength--;}if(index <= firingIndex){firingIndex--;}}}});}return this;}, // Check if a given callback is in the list.\n// If no argument is given, return whether or not list has callbacks attached.\nhas:function has(fn){return fn?jQuery.inArray(fn,list) > -1:!!(list && list.length);}, // Remove all callbacks from the list\nempty:function empty(){list = [];firingLength = 0;return this;}, // Have the list do nothing anymore\ndisable:function disable(){list = stack = memory = undefined;return this;}, // Is it disabled?\ndisabled:function disabled(){return !list;}, // Lock the list in its current state\nlock:function lock(){stack = undefined;if(!memory){self.disable();}return this;}, // Is it locked?\nlocked:function locked(){return !stack;}, // Call all callbacks with the given context and arguments\nfireWith:function fireWith(context,args){if(list && (!_fired || stack)){args = args || [];args = [context,args.slice?args.slice():args];if(firing){stack.push(args);}else {fire(args);}}return this;}, // Call all the callbacks with the given arguments\nfire:function fire(){self.fireWith(this,arguments);return this;}, // To know if the callbacks have already been called at least once\nfired:function fired(){return !!_fired;}};return self;};jQuery.extend({Deferred:function Deferred(func){var tuples=[ // action, add listener, listener list, final state\n[\"resolve\",\"done\",jQuery.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",jQuery.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",jQuery.Callbacks(\"memory\")]],_state=\"pending\",_promise={state:function state(){return _state;},always:function always(){deferred.done(arguments).fail(arguments);return this;},then:function then() /* fnDone, fnFail, fnProgress */{var fns=arguments;return jQuery.Deferred(function(newDefer){jQuery.each(tuples,function(i,tuple){var fn=jQuery.isFunction(fns[i]) && fns[i]; // deferred[ done | fail | progress ] for forwarding actions to newDefer\ndeferred[tuple[1]](function(){var returned=fn && fn.apply(this,arguments);if(returned && jQuery.isFunction(returned.promise)){returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);}else {newDefer[tuple[0] + \"With\"](this === _promise?newDefer.promise():this,fn?[returned]:arguments);}});});fns = null;}).promise();}, // Get a promise for this deferred\n// If obj is provided, the promise aspect is added to the object\npromise:function promise(obj){return obj != null?jQuery.extend(obj,_promise):_promise;}},deferred={}; // Keep pipe for back-compat\n_promise.pipe = _promise.then; // Add list-specific methods\njQuery.each(tuples,function(i,tuple){var list=tuple[2],stateString=tuple[3]; // promise[ done | fail | progress ] = list.add\n_promise[tuple[1]] = list.add; // Handle state\nif(stateString){list.add(function(){ // state = [ resolved | rejected ]\n_state = stateString; // [ reject_list | resolve_list ].disable; progress_list.lock\n},tuples[i ^ 1][2].disable,tuples[2][2].lock);} // deferred[ resolve | reject | notify ]\ndeferred[tuple[0]] = function(){deferred[tuple[0] + \"With\"](this === deferred?_promise:this,arguments);return this;};deferred[tuple[0] + \"With\"] = list.fireWith;}); // Make the deferred a promise\n_promise.promise(deferred); // Call given func if any\nif(func){func.call(deferred,deferred);} // All done!\nreturn deferred;}, // Deferred helper\nwhen:function when(subordinate /* , ..., subordinateN */){var i=0,resolveValues=_slice.call(arguments),length=resolveValues.length, // the count of uncompleted subordinates\nremaining=length !== 1 || subordinate && jQuery.isFunction(subordinate.promise)?length:0, // the master Deferred. If resolveValues consist of only a single Deferred, just use that.\ndeferred=remaining === 1?subordinate:jQuery.Deferred(), // Update function for both resolve and progress values\nupdateFunc=function updateFunc(i,contexts,values){return function(value){contexts[i] = this;values[i] = arguments.length > 1?_slice.call(arguments):value;if(values === progressValues){deferred.notifyWith(contexts,values);}else if(! --remaining){deferred.resolveWith(contexts,values);}};},progressValues,progressContexts,resolveContexts; // Add listeners to Deferred subordinates; treat others as resolved\nif(length > 1){progressValues = new Array(length);progressContexts = new Array(length);resolveContexts = new Array(length);for(;i < length;i++) {if(resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)){resolveValues[i].promise().done(updateFunc(i,resolveContexts,resolveValues)).fail(deferred.reject).progress(updateFunc(i,progressContexts,progressValues));}else {--remaining;}}} // If we're not waiting on anything, resolve the master\nif(!remaining){deferred.resolveWith(resolveContexts,resolveValues);}return deferred.promise();}}); // The deferred used on DOM ready\nvar readyList;jQuery.fn.ready = function(fn){ // Add the callback\njQuery.ready.promise().done(fn);return this;};jQuery.extend({ // Is the DOM ready to be used? Set to true once it occurs.\nisReady:false, // A counter to track how many items to wait for before\n// the ready event fires. See #6781\nreadyWait:1, // Hold (or release) the ready event\nholdReady:function holdReady(hold){if(hold){jQuery.readyWait++;}else {jQuery.ready(true);}}, // Handle when the DOM is ready\nready:function ready(wait){ // Abort if there are pending holds or we're already ready\nif(wait === true?--jQuery.readyWait:jQuery.isReady){return;} // Remember that the DOM is ready\njQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\nif(wait !== true && --jQuery.readyWait > 0){return;} // If there are functions bound, to execute\nreadyList.resolveWith(document,[jQuery]); // Trigger any bound ready events\nif(jQuery.fn.triggerHandler){jQuery(document).triggerHandler(\"ready\");jQuery(document).off(\"ready\");}}}); /**\n * The ready event handler and self cleanup method\n */function completed(){document.removeEventListener(\"DOMContentLoaded\",completed,false);window.removeEventListener(\"load\",completed,false);jQuery.ready();}jQuery.ready.promise = function(obj){if(!readyList){readyList = jQuery.Deferred(); // Catch cases where $(document).ready() is called after the browser event has already occurred.\n// We once tried to use readyState \"interactive\" here, but it caused issues like the one\n// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\nif(document.readyState === \"complete\"){ // Handle it asynchronously to allow scripts the opportunity to delay ready\nsetTimeout(jQuery.ready);}else { // Use the handy event callback\ndocument.addEventListener(\"DOMContentLoaded\",completed,false); // A fallback to window.onload, that will always work\nwindow.addEventListener(\"load\",completed,false);}}return readyList.promise(obj);}; // Kick off the DOM ready check even if the user does not\njQuery.ready.promise(); // Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access=jQuery.access = function(elems,fn,key,value,chainable,emptyGet,raw){var i=0,len=elems.length,bulk=key == null; // Sets many values\nif(jQuery.type(key) === \"object\"){chainable = true;for(i in key) {jQuery.access(elems,fn,i,key[i],true,emptyGet,raw);} // Sets one value\n}else if(value !== undefined){chainable = true;if(!jQuery.isFunction(value)){raw = true;}if(bulk){ // Bulk operations run against the entire set\nif(raw){fn.call(elems,value);fn = null; // ...except when executing function values\n}else {bulk = fn;fn = function(elem,key,value){return bulk.call(jQuery(elem),value);};}}if(fn){for(;i < len;i++) {fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));}}}return chainable?elems: // Gets\nbulk?fn.call(elems):len?fn(elems[0],key):emptyGet;}; /**\n * Determines whether an object can have data\n */jQuery.acceptData = function(owner){ // Accepts only:\n//  - Node\n//    - Node.ELEMENT_NODE\n//    - Node.DOCUMENT_NODE\n//  - Object\n//    - Any\n/* jshint -W018 */return owner.nodeType === 1 || owner.nodeType === 9 || ! +owner.nodeType;};function Data(){ // Support: Android<4,\n// Old WebKit does not have Object.preventExtensions/freeze method,\n// return new empty object instead with no [[set]] accessor\nObject.defineProperty(this.cache = {},0,{get:function get(){return {};}});this.expando = jQuery.expando + Data.uid++;}Data.uid = 1;Data.accepts = jQuery.acceptData;Data.prototype = {key:function key(owner){ // We can accept data for non-element nodes in modern browsers,\n// but we should not, see #8335.\n// Always return the key for a frozen object.\nif(!Data.accepts(owner)){return 0;}var descriptor={}, // Check if the owner object already has a cache key\nunlock=owner[this.expando]; // If not, create one\nif(!unlock){unlock = Data.uid++; // Secure it in a non-enumerable, non-writable property\ntry{descriptor[this.expando] = {value:unlock};Object.defineProperties(owner,descriptor); // Support: Android<4\n// Fallback to a less secure definition\n}catch(e) {descriptor[this.expando] = unlock;jQuery.extend(owner,descriptor);}} // Ensure the cache object\nif(!this.cache[unlock]){this.cache[unlock] = {};}return unlock;},set:function set(owner,data,value){var prop, // There may be an unlock assigned to this node,\n// if there is no entry for this \"owner\", create one inline\n// and set the unlock as though an owner entry had always existed\nunlock=this.key(owner),cache=this.cache[unlock]; // Handle: [ owner, key, value ] args\nif(typeof data === \"string\"){cache[data] = value; // Handle: [ owner, { properties } ] args\n}else { // Fresh assignments by object are shallow copied\nif(jQuery.isEmptyObject(cache)){jQuery.extend(this.cache[unlock],data); // Otherwise, copy the properties one-by-one to the cache object\n}else {for(prop in data) {cache[prop] = data[prop];}}}return cache;},get:function get(owner,key){ // Either a valid cache is found, or will be created.\n// New caches will be created and the unlock returned,\n// allowing direct access to the newly created\n// empty data object. A valid owner object must be provided.\nvar cache=this.cache[this.key(owner)];return key === undefined?cache:cache[key];},access:function access(owner,key,value){var stored; // In cases where either:\n//\n//   1. No key was specified\n//   2. A string key was specified, but no value provided\n//\n// Take the \"read\" path and allow the get method to determine\n// which value to return, respectively either:\n//\n//   1. The entire cache object\n//   2. The data stored at the key\n//\nif(key === undefined || key && typeof key === \"string\" && value === undefined){stored = this.get(owner,key);return stored !== undefined?stored:this.get(owner,jQuery.camelCase(key));} // [*]When the key is not a string, or both a key and value\n// are specified, set or extend (existing objects) with either:\n//\n//   1. An object of properties\n//   2. A key and value\n//\nthis.set(owner,key,value); // Since the \"set\" path can have two possible entry points\n// return the expected data based on which path was taken[*]\nreturn value !== undefined?value:key;},remove:function remove(owner,key){var i,name,camel,unlock=this.key(owner),cache=this.cache[unlock];if(key === undefined){this.cache[unlock] = {};}else { // Support array or space separated string of keys\nif(jQuery.isArray(key)){ // If \"name\" is an array of keys...\n// When data is initially created, via (\"key\", \"val\") signature,\n// keys will be converted to camelCase.\n// Since there is no way to tell _how_ a key was added, remove\n// both plain key and camelCase key. #12786\n// This will only penalize the array argument path.\nname = key.concat(key.map(jQuery.camelCase));}else {camel = jQuery.camelCase(key); // Try the string as a key before any manipulation\nif(key in cache){name = [key,camel];}else { // If a key with the spaces exists, use it.\n// Otherwise, create an array by matching non-whitespace\nname = camel;name = name in cache?[name]:name.match(rnotwhite) || [];}}i = name.length;while(i--) {delete cache[name[i]];}}},hasData:function hasData(owner){return !jQuery.isEmptyObject(this.cache[owner[this.expando]] || {});},discard:function discard(owner){if(owner[this.expando]){delete this.cache[owner[this.expando]];}}};var data_priv=new Data();var data_user=new Data(); //\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\nvar rbrace=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,rmultiDash=/([A-Z])/g;function dataAttr(elem,key,data){var name; // If nothing was found internally, try to fetch any\n// data from the HTML5 data-* attribute\nif(data === undefined && elem.nodeType === 1){name = \"data-\" + key.replace(rmultiDash,\"-$1\").toLowerCase();data = elem.getAttribute(name);if(typeof data === \"string\"){try{data = data === \"true\"?true:data === \"false\"?false:data === \"null\"?null: // Only convert to a number if it doesn't change the string\n+data + \"\" === data?+data:rbrace.test(data)?jQuery.parseJSON(data):data;}catch(e) {} // Make sure we set the data so it isn't changed later\ndata_user.set(elem,key,data);}else {data = undefined;}}return data;}jQuery.extend({hasData:function hasData(elem){return data_user.hasData(elem) || data_priv.hasData(elem);},data:function data(elem,name,_data){return data_user.access(elem,name,_data);},removeData:function removeData(elem,name){data_user.remove(elem,name);}, // TODO: Now that all calls to _data and _removeData have been replaced\n// with direct calls to data_priv methods, these can be deprecated.\n_data:function _data(elem,name,data){return data_priv.access(elem,name,data);},_removeData:function _removeData(elem,name){data_priv.remove(elem,name);}});jQuery.fn.extend({data:function data(key,value){var i,name,data,elem=this[0],attrs=elem && elem.attributes; // Gets all values\nif(key === undefined){if(this.length){data = data_user.get(elem);if(elem.nodeType === 1 && !data_priv.get(elem,\"hasDataAttrs\")){i = attrs.length;while(i--) { // Support: IE11+\n// The attrs elements can be null (#14894)\nif(attrs[i]){name = attrs[i].name;if(name.indexOf(\"data-\") === 0){name = jQuery.camelCase(name.slice(5));dataAttr(elem,name,data[name]);}}}data_priv.set(elem,\"hasDataAttrs\",true);}}return data;} // Sets multiple values\nif((typeof key === \"undefined\"?\"undefined\":_typeof(key)) === \"object\"){return this.each(function(){data_user.set(this,key);});}return access(this,function(value){var data,camelKey=jQuery.camelCase(key); // The calling jQuery object (element matches) is not empty\n// (and therefore has an element appears at this[ 0 ]) and the\n// `value` parameter was not undefined. An empty jQuery object\n// will result in `undefined` for elem = this[ 0 ] which will\n// throw an exception if an attempt to read a data cache is made.\nif(elem && value === undefined){ // Attempt to get data from the cache\n// with the key as-is\ndata = data_user.get(elem,key);if(data !== undefined){return data;} // Attempt to get data from the cache\n// with the key camelized\ndata = data_user.get(elem,camelKey);if(data !== undefined){return data;} // Attempt to \"discover\" the data in\n// HTML5 custom data-* attrs\ndata = dataAttr(elem,camelKey,undefined);if(data !== undefined){return data;} // We tried really hard, but the data doesn't exist.\nreturn;} // Set the data...\nthis.each(function(){ // First, attempt to store a copy or reference of any\n// data that might've been store with a camelCased key.\nvar data=data_user.get(this,camelKey); // For HTML5 data-* attribute interop, we have to\n// store property names with dashes in a camelCase form.\n// This might not apply to all properties...*\ndata_user.set(this,camelKey,value); // *... In the case of properties that might _actually_\n// have dashes, we need to also store a copy of that\n// unchanged property.\nif(key.indexOf(\"-\") !== -1 && data !== undefined){data_user.set(this,key,value);}});},null,value,arguments.length > 1,null,true);},removeData:function removeData(key){return this.each(function(){data_user.remove(this,key);});}});jQuery.extend({queue:function queue(elem,type,data){var queue;if(elem){type = (type || \"fx\") + \"queue\";queue = data_priv.get(elem,type); // Speed up dequeue by getting out quickly if this is just a lookup\nif(data){if(!queue || jQuery.isArray(data)){queue = data_priv.access(elem,type,jQuery.makeArray(data));}else {queue.push(data);}}return queue || [];}},dequeue:function dequeue(elem,type){type = type || \"fx\";var queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type),next=function next(){jQuery.dequeue(elem,type);}; // If the fx queue is dequeued, always remove the progress sentinel\nif(fn === \"inprogress\"){fn = queue.shift();startLength--;}if(fn){ // Add a progress sentinel to prevent the fx queue from being\n// automatically dequeued\nif(type === \"fx\"){queue.unshift(\"inprogress\");} // Clear up the last queue stop function\ndelete hooks.stop;fn.call(elem,next,hooks);}if(!startLength && hooks){hooks.empty.fire();}}, // Not public - generate a queueHooks object, or return the current one\n_queueHooks:function _queueHooks(elem,type){var key=type + \"queueHooks\";return data_priv.get(elem,key) || data_priv.access(elem,key,{empty:jQuery.Callbacks(\"once memory\").add(function(){data_priv.remove(elem,[type + \"queue\",key]);})});}});jQuery.fn.extend({queue:function queue(type,data){var setter=2;if(typeof type !== \"string\"){data = type;type = \"fx\";setter--;}if(arguments.length < setter){return jQuery.queue(this[0],type);}return data === undefined?this:this.each(function(){var queue=jQuery.queue(this,type,data); // Ensure a hooks for this queue\njQuery._queueHooks(this,type);if(type === \"fx\" && queue[0] !== \"inprogress\"){jQuery.dequeue(this,type);}});},dequeue:function dequeue(type){return this.each(function(){jQuery.dequeue(this,type);});},clearQueue:function clearQueue(type){return this.queue(type || \"fx\",[]);}, // Get a promise resolved when queues of a certain type\n// are emptied (fx is the type by default)\npromise:function promise(type,obj){var tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function resolve(){if(! --count){defer.resolveWith(elements,[elements]);}};if(typeof type !== \"string\"){obj = type;type = undefined;}type = type || \"fx\";while(i--) {tmp = data_priv.get(elements[i],type + \"queueHooks\");if(tmp && tmp.empty){count++;tmp.empty.add(resolve);}}resolve();return defer.promise(obj);}});var pnum=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;var cssExpand=[\"Top\",\"Right\",\"Bottom\",\"Left\"];var isHidden=function isHidden(elem,el){ // isHidden might be called from jQuery#filter function;\n// in that case, element will be second argument\nelem = el || elem;return jQuery.css(elem,\"display\") === \"none\" || !jQuery.contains(elem.ownerDocument,elem);};var rcheckableType=/^(?:checkbox|radio)$/i;(function(){var fragment=document.createDocumentFragment(),div=fragment.appendChild(document.createElement(\"div\")),input=document.createElement(\"input\"); // Support: Safari<=5.1\n// Check state lost if the name is set (#11217)\n// Support: Windows Web Apps (WWA)\n// `name` and `type` must use .setAttribute for WWA (#14901)\ninput.setAttribute(\"type\",\"radio\");input.setAttribute(\"checked\",\"checked\");input.setAttribute(\"name\",\"t\");div.appendChild(input); // Support: Safari<=5.1, Android<4.2\n// Older WebKit doesn't clone checked state correctly in fragments\nsupport.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE<=11+\n// Make sure textarea (and checkbox) defaultValue is properly cloned\ndiv.innerHTML = \"<textarea>x</textarea>\";support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;})();var strundefined= true?\"undefined\":_typeof(undefined);support.focusinBubbles = \"onfocusin\" in window;var rkeyEvent=/^key/,rmouseEvent=/^(?:mouse|pointer|contextmenu)|click/,rfocusMorph=/^(?:focusinfocus|focusoutblur)$/,rtypenamespace=/^([^.]*)(?:\\.(.+)|)$/;function returnTrue(){return true;}function returnFalse(){return false;}function safeActiveElement(){try{return document.activeElement;}catch(err) {}} /*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */jQuery.event = {global:{},add:function add(elem,types,handler,data,selector){var handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=data_priv.get(elem); // Don't attach events to noData or text/comment nodes (but allow plain objects)\nif(!elemData){return;} // Caller can pass in an object of custom data in lieu of the handler\nif(handler.handler){handleObjIn = handler;handler = handleObjIn.handler;selector = handleObjIn.selector;} // Make sure that the handler has a unique ID, used to find/remove it later\nif(!handler.guid){handler.guid = jQuery.guid++;} // Init the element's event structure and main handler, if this is the first\nif(!(events = elemData.events)){events = elemData.events = {};}if(!(eventHandle = elemData.handle)){eventHandle = elemData.handle = function(e){ // Discard the second event of a jQuery.event.trigger() and\n// when an event is called after a page has unloaded\nreturn (typeof jQuery === \"undefined\"?\"undefined\":_typeof(jQuery)) !== strundefined && jQuery.event.triggered !== e.type?jQuery.event.dispatch.apply(elem,arguments):undefined;};} // Handle multiple events separated by a space\ntypes = (types || \"\").match(rnotwhite) || [\"\"];t = types.length;while(t--) {tmp = rtypenamespace.exec(types[t]) || [];type = origType = tmp[1];namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\nif(!type){continue;} // If event changes its type, use the special event handlers for the changed type\nspecial = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\ntype = (selector?special.delegateType:special.bindType) || type; // Update special based on newly reset type\nspecial = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\nhandleObj = jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector && jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(\".\")},handleObjIn); // Init the event handler queue if we're the first\nif(!(handlers = events[type])){handlers = events[type] = [];handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\nif(!special.setup || special.setup.call(elem,data,namespaces,eventHandle) === false){if(elem.addEventListener){elem.addEventListener(type,eventHandle,false);}}}if(special.add){special.add.call(elem,handleObj);if(!handleObj.handler.guid){handleObj.handler.guid = handler.guid;}} // Add to the element's handler list, delegates in front\nif(selector){handlers.splice(handlers.delegateCount++,0,handleObj);}else {handlers.push(handleObj);} // Keep track of which events have ever been used, for event optimization\njQuery.event.global[type] = true;}}, // Detach an event or set of events from an element\nremove:function remove(elem,types,handler,selector,mappedTypes){var j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=data_priv.hasData(elem) && data_priv.get(elem);if(!elemData || !(events = elemData.events)){return;} // Once for each type.namespace in types; type may be omitted\ntypes = (types || \"\").match(rnotwhite) || [\"\"];t = types.length;while(t--) {tmp = rtypenamespace.exec(types[t]) || [];type = origType = tmp[1];namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\nif(!type){for(type in events) {jQuery.event.remove(elem,type + types[t],handler,selector,true);}continue;}special = jQuery.event.special[type] || {};type = (selector?special.delegateType:special.bindType) || type;handlers = events[type] || [];tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\norigCount = j = handlers.length;while(j--) {handleObj = handlers[j];if((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)){handlers.splice(j,1);if(handleObj.selector){handlers.delegateCount--;}if(special.remove){special.remove.call(elem,handleObj);}}} // Remove generic event handler if we removed something and no more handlers exist\n// (avoids potential for endless recursion during removal of special event handlers)\nif(origCount && !handlers.length){if(!special.teardown || special.teardown.call(elem,namespaces,elemData.handle) === false){jQuery.removeEvent(elem,type,elemData.handle);}delete events[type];}} // Remove the expando if it's no longer used\nif(jQuery.isEmptyObject(events)){delete elemData.handle;data_priv.remove(elem,\"events\");}},trigger:function trigger(event,data,elem,onlyHandlers){var i,cur,tmp,bubbleType,ontype,handle,special,eventPath=[elem || document],type=hasOwn.call(event,\"type\")?event.type:event,namespaces=hasOwn.call(event,\"namespace\")?event.namespace.split(\".\"):[];cur = tmp = elem = elem || document; // Don't do events on text and comment nodes\nif(elem.nodeType === 3 || elem.nodeType === 8){return;} // focus/blur morphs to focusin/out; ensure we're not firing them right now\nif(rfocusMorph.test(type + jQuery.event.triggered)){return;}if(type.indexOf(\".\") >= 0){ // Namespaced trigger; create a regexp to match event type in handle()\nnamespaces = type.split(\".\");type = namespaces.shift();namespaces.sort();}ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\nevent = event[jQuery.expando]?event:new jQuery.Event(type,(typeof event === \"undefined\"?\"undefined\":_typeof(event)) === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\nevent.isTrigger = onlyHandlers?2:3;event.namespace = namespaces.join(\".\");event.namespace_re = event.namespace?new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"):null; // Clean up the event in case it is being reused\nevent.result = undefined;if(!event.target){event.target = elem;} // Clone any incoming data and prepend the event, creating the handler arg list\ndata = data == null?[event]:jQuery.makeArray(data,[event]); // Allow special events to draw outside the lines\nspecial = jQuery.event.special[type] || {};if(!onlyHandlers && special.trigger && special.trigger.apply(elem,data) === false){return;} // Determine event propagation path in advance, per W3C events spec (#9951)\n// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\nif(!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)){bubbleType = special.delegateType || type;if(!rfocusMorph.test(bubbleType + type)){cur = cur.parentNode;}for(;cur;cur = cur.parentNode) {eventPath.push(cur);tmp = cur;} // Only add window if we got to document (e.g., not plain obj or detached DOM)\nif(tmp === (elem.ownerDocument || document)){eventPath.push(tmp.defaultView || tmp.parentWindow || window);}} // Fire handlers on the event path\ni = 0;while((cur = eventPath[i++]) && !event.isPropagationStopped()) {event.type = i > 1?bubbleType:special.bindType || type; // jQuery handler\nhandle = (data_priv.get(cur,\"events\") || {})[event.type] && data_priv.get(cur,\"handle\");if(handle){handle.apply(cur,data);} // Native handler\nhandle = ontype && cur[ontype];if(handle && handle.apply && jQuery.acceptData(cur)){event.result = handle.apply(cur,data);if(event.result === false){event.preventDefault();}}}event.type = type; // If nobody prevented the default action, do it now\nif(!onlyHandlers && !event.isDefaultPrevented()){if((!special._default || special._default.apply(eventPath.pop(),data) === false) && jQuery.acceptData(elem)){ // Call a native DOM method on the target with the same name name as the event.\n// Don't do default actions on window, that's where global variables be (#6170)\nif(ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)){ // Don't re-trigger an onFOO event when we call its FOO() method\ntmp = elem[ontype];if(tmp){elem[ontype] = null;} // Prevent re-triggering of the same event, since we already bubbled it above\njQuery.event.triggered = type;elem[type]();jQuery.event.triggered = undefined;if(tmp){elem[ontype] = tmp;}}}}return event.result;},dispatch:function dispatch(event){ // Make a writable jQuery.Event from the native event object\nevent = jQuery.event.fix(event);var i,j,ret,matched,handleObj,handlerQueue=[],args=_slice.call(arguments),handlers=(data_priv.get(this,\"events\") || {})[event.type] || [],special=jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\nargs[0] = event;event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\nif(special.preDispatch && special.preDispatch.call(this,event) === false){return;} // Determine handlers\nhandlerQueue = jQuery.event.handlers.call(this,event,handlers); // Run delegates first; they may want to stop propagation beneath us\ni = 0;while((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {event.currentTarget = matched.elem;j = 0;while((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) { // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n// a subset or equal to those in the bound event (both can have no namespace).\nif(!event.namespace_re || event.namespace_re.test(handleObj.namespace)){event.handleObj = handleObj;event.data = handleObj.data;ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem,args);if(ret !== undefined){if((event.result = ret) === false){event.preventDefault();event.stopPropagation();}}}}} // Call the postDispatch hook for the mapped type\nif(special.postDispatch){special.postDispatch.call(this,event);}return event.result;},handlers:function handlers(event,_handlers){var i,matches,sel,handleObj,handlerQueue=[],delegateCount=_handlers.delegateCount,cur=event.target; // Find delegate handlers\n// Black-hole SVG <use> instance trees (#13180)\n// Avoid non-left-click bubbling in Firefox (#3861)\nif(delegateCount && cur.nodeType && (!event.button || event.type !== \"click\")){for(;cur !== this;cur = cur.parentNode || this) { // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\nif(cur.disabled !== true || event.type !== \"click\"){matches = [];for(i = 0;i < delegateCount;i++) {handleObj = _handlers[i]; // Don't conflict with Object.prototype properties (#13203)\nsel = handleObj.selector + \" \";if(matches[sel] === undefined){matches[sel] = handleObj.needsContext?jQuery(sel,this).index(cur) >= 0:jQuery.find(sel,this,null,[cur]).length;}if(matches[sel]){matches.push(handleObj);}}if(matches.length){handlerQueue.push({elem:cur,handlers:matches});}}}} // Add the remaining (directly-bound) handlers\nif(delegateCount < _handlers.length){handlerQueue.push({elem:this,handlers:_handlers.slice(delegateCount)});}return handlerQueue;}, // Includes some event props shared by KeyEvent and MouseEvent\nprops:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function filter(event,original){ // Add which for key events\nif(event.which == null){event.which = original.charCode != null?original.charCode:original.keyCode;}return event;}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function filter(event,original){var eventDoc,doc,body,button=original.button; // Calculate pageX/Y if missing and clientX/Y available\nif(event.pageX == null && original.clientX != null){eventDoc = event.target.ownerDocument || document;doc = eventDoc.documentElement;body = eventDoc.body;event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);} // Add which for click: 1 === left; 2 === middle; 3 === right\n// Note: button is not normalized, so don't use it\nif(!event.which && button !== undefined){event.which = button & 1?1:button & 2?3:button & 4?2:0;}return event;}},fix:function fix(event){if(event[jQuery.expando]){return event;} // Create a writable copy of the event object and normalize some properties\nvar i,prop,copy,type=event.type,originalEvent=event,fixHook=this.fixHooks[type];if(!fixHook){this.fixHooks[type] = fixHook = rmouseEvent.test(type)?this.mouseHooks:rkeyEvent.test(type)?this.keyHooks:{};}copy = fixHook.props?this.props.concat(fixHook.props):this.props;event = new jQuery.Event(originalEvent);i = copy.length;while(i--) {prop = copy[i];event[prop] = originalEvent[prop];} // Support: Cordova 2.5 (WebKit) (#13255)\n// All events should have a target; Cordova deviceready doesn't\nif(!event.target){event.target = document;} // Support: Safari 6.0+, Chrome<28\n// Target should not be a text node (#504, #13143)\nif(event.target.nodeType === 3){event.target = event.target.parentNode;}return fixHook.filter?fixHook.filter(event,originalEvent):event;},special:{load:{ // Prevent triggered image.load events from bubbling to window.load\nnoBubble:true},focus:{ // Fire native event if possible so blur/focus sequence is correct\ntrigger:function trigger(){if(this !== safeActiveElement() && this.focus){this.focus();return false;}},delegateType:\"focusin\"},blur:{trigger:function trigger(){if(this === safeActiveElement() && this.blur){this.blur();return false;}},delegateType:\"focusout\"},click:{ // For checkbox, fire native event so checked state will be right\ntrigger:function trigger(){if(this.type === \"checkbox\" && this.click && jQuery.nodeName(this,\"input\")){this.click();return false;}}, // For cross-browser consistency, don't fire native .click() on links\n_default:function _default(event){return jQuery.nodeName(event.target,\"a\");}},beforeunload:{postDispatch:function postDispatch(event){ // Support: Firefox 20+\n// Firefox doesn't alert if the returnValue field is not set.\nif(event.result !== undefined && event.originalEvent){event.originalEvent.returnValue = event.result;}}}},simulate:function simulate(type,elem,event,bubble){ // Piggyback on a donor event to simulate a different one.\n// Fake originalEvent to avoid donor's stopPropagation, but if the\n// simulated event prevents default then we do the same on the donor.\nvar e=jQuery.extend(new jQuery.Event(),event,{type:type,isSimulated:true,originalEvent:{}});if(bubble){jQuery.event.trigger(e,null,elem);}else {jQuery.event.dispatch.call(elem,e);}if(e.isDefaultPrevented()){event.preventDefault();}}};jQuery.removeEvent = function(elem,type,handle){if(elem.removeEventListener){elem.removeEventListener(type,handle,false);}};jQuery.Event = function(src,props){ // Allow instantiation without the 'new' keyword\nif(!(this instanceof jQuery.Event)){return new jQuery.Event(src,props);} // Event object\nif(src && src.type){this.originalEvent = src;this.type = src.type; // Events bubbling up the document may have been marked as prevented\n// by a handler lower down the tree; reflect the correct value.\nthis.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined &&  // Support: Android<4.0\nsrc.returnValue === false?returnTrue:returnFalse; // Event type\n}else {this.type = src;} // Put explicitly provided properties onto the event object\nif(props){jQuery.extend(this,props);} // Create a timestamp if incoming event doesn't have one\nthis.timeStamp = src && src.timeStamp || jQuery.now(); // Mark it as fixed\nthis[jQuery.expando] = true;}; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,preventDefault:function preventDefault(){var e=this.originalEvent;this.isDefaultPrevented = returnTrue;if(e && e.preventDefault){e.preventDefault();}},stopPropagation:function stopPropagation(){var e=this.originalEvent;this.isPropagationStopped = returnTrue;if(e && e.stopPropagation){e.stopPropagation();}},stopImmediatePropagation:function stopImmediatePropagation(){var e=this.originalEvent;this.isImmediatePropagationStopped = returnTrue;if(e && e.stopImmediatePropagation){e.stopImmediatePropagation();}this.stopPropagation();}}; // Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(orig,fix){jQuery.event.special[orig] = {delegateType:fix,bindType:fix,handle:function handle(event){var ret,target=this,related=event.relatedTarget,handleObj=event.handleObj; // For mousenter/leave call the handler if related is outside the target.\n// NB: No relatedTarget if the mouse left/entered the browser window\nif(!related || related !== target && !jQuery.contains(target,related)){event.type = handleObj.origType;ret = handleObj.handler.apply(this,arguments);event.type = fix;}return ret;}};}); // Support: Firefox, Chrome, Safari\n// Create \"bubbling\" focus and blur events\nif(!support.focusinBubbles){jQuery.each({focus:\"focusin\",blur:\"focusout\"},function(orig,fix){ // Attach a single capturing handler on the document while someone wants focusin/focusout\nvar handler=function handler(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event),true);};jQuery.event.special[fix] = {setup:function setup(){var doc=this.ownerDocument || this,attaches=data_priv.access(doc,fix);if(!attaches){doc.addEventListener(orig,handler,true);}data_priv.access(doc,fix,(attaches || 0) + 1);},teardown:function teardown(){var doc=this.ownerDocument || this,attaches=data_priv.access(doc,fix) - 1;if(!attaches){doc.removeEventListener(orig,handler,true);data_priv.remove(doc,fix);}else {data_priv.access(doc,fix,attaches);}}};});}jQuery.fn.extend({on:function on(types,selector,data,fn, /*INTERNAL*/one){var origFn,type; // Types can be a map of types/handlers\nif((typeof types === \"undefined\"?\"undefined\":_typeof(types)) === \"object\"){ // ( types-Object, selector, data )\nif(typeof selector !== \"string\"){ // ( types-Object, data )\ndata = data || selector;selector = undefined;}for(type in types) {this.on(type,selector,data,types[type],one);}return this;}if(data == null && fn == null){ // ( types, fn )\nfn = selector;data = selector = undefined;}else if(fn == null){if(typeof selector === \"string\"){ // ( types, selector, fn )\nfn = data;data = undefined;}else { // ( types, data, fn )\nfn = data;data = selector;selector = undefined;}}if(fn === false){fn = returnFalse;}else if(!fn){return this;}if(one === 1){origFn = fn;fn = function(event){ // Can use an empty set, since event contains the info\njQuery().off(event);return origFn.apply(this,arguments);}; // Use same guid so caller can remove using origFn\nfn.guid = origFn.guid || (origFn.guid = jQuery.guid++);}return this.each(function(){jQuery.event.add(this,types,fn,data,selector);});},one:function one(types,selector,data,fn){return this.on(types,selector,data,fn,1);},off:function off(types,selector,fn){var handleObj,type;if(types && types.preventDefault && types.handleObj){ // ( event )  dispatched jQuery.Event\nhandleObj = types.handleObj;jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType + \".\" + handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler);return this;}if((typeof types === \"undefined\"?\"undefined\":_typeof(types)) === \"object\"){ // ( types-object [, selector] )\nfor(type in types) {this.off(type,selector,types[type]);}return this;}if(selector === false || typeof selector === \"function\"){ // ( types [, fn] )\nfn = selector;selector = undefined;}if(fn === false){fn = returnFalse;}return this.each(function(){jQuery.event.remove(this,types,fn,selector);});},trigger:function trigger(type,data){return this.each(function(){jQuery.event.trigger(type,data,this);});},triggerHandler:function triggerHandler(type,data){var elem=this[0];if(elem){return jQuery.event.trigger(type,data,elem,true);}}});var rxhtmlTag=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,rtagName=/<([\\w:]+)/,rhtml=/<|&#?\\w+;/,rnoInnerhtml=/<(?:script|style|link)/i, // checked=\"checked\" or checked\nrchecked=/checked\\s*(?:[^=]|=\\s*.checked.)/i,rscriptType=/^$|\\/(?:java|ecma)script/i,rscriptTypeMasked=/^true\\/(.*)/,rcleanScript=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g, // We have to close these tags to support XHTML (#13200)\nwrapMap={ // Support: IE9\noption:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]}; // Support: IE9\nwrapMap.optgroup = wrapMap.option;wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;wrapMap.th = wrapMap.td; // Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget(elem,content){return jQuery.nodeName(elem,\"table\") && jQuery.nodeName(content.nodeType !== 11?content:content.firstChild,\"tr\")?elem.getElementsByTagName(\"tbody\")[0] || elem.appendChild(elem.ownerDocument.createElement(\"tbody\")):elem;} // Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript(elem){elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;return elem;}function restoreScript(elem){var match=rscriptTypeMasked.exec(elem.type);if(match){elem.type = match[1];}else {elem.removeAttribute(\"type\");}return elem;} // Mark scripts as having already been evaluated\nfunction setGlobalEval(elems,refElements){var i=0,l=elems.length;for(;i < l;i++) {data_priv.set(elems[i],\"globalEval\",!refElements || data_priv.get(refElements[i],\"globalEval\"));}}function cloneCopyEvent(src,dest){var i,l,type,pdataOld,pdataCur,udataOld,udataCur,events;if(dest.nodeType !== 1){return;} // 1. Copy private data: events, handlers, etc.\nif(data_priv.hasData(src)){pdataOld = data_priv.access(src);pdataCur = data_priv.set(dest,pdataOld);events = pdataOld.events;if(events){delete pdataCur.handle;pdataCur.events = {};for(type in events) {for(i = 0,l = events[type].length;i < l;i++) {jQuery.event.add(dest,type,events[type][i]);}}}} // 2. Copy user data\nif(data_user.hasData(src)){udataOld = data_user.access(src);udataCur = jQuery.extend({},udataOld);data_user.set(dest,udataCur);}}function getAll(context,tag){var ret=context.getElementsByTagName?context.getElementsByTagName(tag || \"*\"):context.querySelectorAll?context.querySelectorAll(tag || \"*\"):[];return tag === undefined || tag && jQuery.nodeName(context,tag)?jQuery.merge([context],ret):ret;} // Fix IE bugs, see support tests\nfunction fixInput(src,dest){var nodeName=dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\nif(nodeName === \"input\" && rcheckableType.test(src.type)){dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n}else if(nodeName === \"input\" || nodeName === \"textarea\"){dest.defaultValue = src.defaultValue;}}jQuery.extend({clone:function clone(elem,dataAndEvents,deepDataAndEvents){var i,l,srcElements,destElements,clone=elem.cloneNode(true),inPage=jQuery.contains(elem.ownerDocument,elem); // Fix IE cloning issues\nif(!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)){ // We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\ndestElements = getAll(clone);srcElements = getAll(elem);for(i = 0,l = srcElements.length;i < l;i++) {fixInput(srcElements[i],destElements[i]);}} // Copy the events from the original to the clone\nif(dataAndEvents){if(deepDataAndEvents){srcElements = srcElements || getAll(elem);destElements = destElements || getAll(clone);for(i = 0,l = srcElements.length;i < l;i++) {cloneCopyEvent(srcElements[i],destElements[i]);}}else {cloneCopyEvent(elem,clone);}} // Preserve script evaluation history\ndestElements = getAll(clone,\"script\");if(destElements.length > 0){setGlobalEval(destElements,!inPage && getAll(elem,\"script\"));} // Return the cloned set\nreturn clone;},buildFragment:function buildFragment(elems,context,scripts,selection){var elem,tmp,tag,wrap,contains,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;for(;i < l;i++) {elem = elems[i];if(elem || elem === 0){ // Add nodes directly\nif(jQuery.type(elem) === \"object\"){ // Support: QtWebKit, PhantomJS\n// push.apply(_, arraylike) throws on ancient WebKit\njQuery.merge(nodes,elem.nodeType?[elem]:elem); // Convert non-html into a text node\n}else if(!rhtml.test(elem)){nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n}else {tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\ntag = (rtagName.exec(elem) || [\"\",\"\"])[1].toLowerCase();wrap = wrapMap[tag] || wrapMap._default;tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag,\"<$1></$2>\") + wrap[2]; // Descend through wrappers to the right content\nj = wrap[0];while(j--) {tmp = tmp.lastChild;} // Support: QtWebKit, PhantomJS\n// push.apply(_, arraylike) throws on ancient WebKit\njQuery.merge(nodes,tmp.childNodes); // Remember the top-level container\ntmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\ntmp.textContent = \"\";}}} // Remove wrapper from fragment\nfragment.textContent = \"\";i = 0;while(elem = nodes[i++]) { // #4087 - If origin and destination elements are the same, and this is\n// that element, do not do anything\nif(selection && jQuery.inArray(elem,selection) !== -1){continue;}contains = jQuery.contains(elem.ownerDocument,elem); // Append to fragment\ntmp = getAll(fragment.appendChild(elem),\"script\"); // Preserve script evaluation history\nif(contains){setGlobalEval(tmp);} // Capture executables\nif(scripts){j = 0;while(elem = tmp[j++]) {if(rscriptType.test(elem.type || \"\")){scripts.push(elem);}}}}return fragment;},cleanData:function cleanData(elems){var data,elem,type,key,special=jQuery.event.special,i=0;for(;(elem = elems[i]) !== undefined;i++) {if(jQuery.acceptData(elem)){key = elem[data_priv.expando];if(key && (data = data_priv.cache[key])){if(data.events){for(type in data.events) {if(special[type]){jQuery.event.remove(elem,type); // This is a shortcut to avoid jQuery.event.remove's overhead\n}else {jQuery.removeEvent(elem,type,data.handle);}}}if(data_priv.cache[key]){ // Discard any remaining `private` data\ndelete data_priv.cache[key];}}} // Discard any remaining `user` data\ndelete data_user.cache[elem[data_user.expando]];}}});jQuery.fn.extend({text:function text(value){return access(this,function(value){return value === undefined?jQuery.text(this):this.empty().each(function(){if(this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9){this.textContent = value;}});},null,value,arguments.length);},append:function append(){return this.domManip(arguments,function(elem){if(this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9){var target=manipulationTarget(this,elem);target.appendChild(elem);}});},prepend:function prepend(){return this.domManip(arguments,function(elem){if(this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9){var target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild);}});},before:function before(){return this.domManip(arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this);}});},after:function after(){return this.domManip(arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this.nextSibling);}});},remove:function remove(selector,keepData /* Internal Use Only */){var elem,elems=selector?jQuery.filter(selector,this):this,i=0;for(;(elem = elems[i]) != null;i++) {if(!keepData && elem.nodeType === 1){jQuery.cleanData(getAll(elem));}if(elem.parentNode){if(keepData && jQuery.contains(elem.ownerDocument,elem)){setGlobalEval(getAll(elem,\"script\"));}elem.parentNode.removeChild(elem);}}return this;},empty:function empty(){var elem,i=0;for(;(elem = this[i]) != null;i++) {if(elem.nodeType === 1){ // Prevent memory leaks\njQuery.cleanData(getAll(elem,false)); // Remove any remaining nodes\nelem.textContent = \"\";}}return this;},clone:function clone(dataAndEvents,deepDataAndEvents){dataAndEvents = dataAndEvents == null?false:dataAndEvents;deepDataAndEvents = deepDataAndEvents == null?dataAndEvents:deepDataAndEvents;return this.map(function(){return jQuery.clone(this,dataAndEvents,deepDataAndEvents);});},html:function html(value){return access(this,function(value){var elem=this[0] || {},i=0,l=this.length;if(value === undefined && elem.nodeType === 1){return elem.innerHTML;} // See if we can take a shortcut and just use innerHTML\nif(typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\",\"\"])[1].toLowerCase()]){value = value.replace(rxhtmlTag,\"<$1></$2>\");try{for(;i < l;i++) {elem = this[i] || {}; // Remove element nodes and prevent memory leaks\nif(elem.nodeType === 1){jQuery.cleanData(getAll(elem,false));elem.innerHTML = value;}}elem = 0; // If using innerHTML throws an exception, use the fallback method\n}catch(e) {}}if(elem){this.empty().append(value);}},null,value,arguments.length);},replaceWith:function replaceWith(){var arg=arguments[0]; // Make the changes, replacing each context element with the new content\nthis.domManip(arguments,function(elem){arg = this.parentNode;jQuery.cleanData(getAll(this));if(arg){arg.replaceChild(elem,this);}}); // Force removal if there was no new content (e.g., from empty arguments)\nreturn arg && (arg.length || arg.nodeType)?this:this.remove();},detach:function detach(selector){return this.remove(selector,true);},domManip:function domManip(args,callback){ // Flatten any nested arrays\nargs = concat.apply([],args);var fragment,first,scripts,hasScripts,node,doc,i=0,l=this.length,set=this,iNoClone=l - 1,value=args[0],isFunction=jQuery.isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\nif(isFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)){return this.each(function(index){var self=set.eq(index);if(isFunction){args[0] = value.call(this,index,self.html());}self.domManip(args,callback);});}if(l){fragment = jQuery.buildFragment(args,this[0].ownerDocument,false,this);first = fragment.firstChild;if(fragment.childNodes.length === 1){fragment = first;}if(first){scripts = jQuery.map(getAll(fragment,\"script\"),disableScript);hasScripts = scripts.length; // Use the original fragment for the last item instead of the first because it can end up\n// being emptied incorrectly in certain situations (#8070).\nfor(;i < l;i++) {node = fragment;if(i !== iNoClone){node = jQuery.clone(node,true,true); // Keep references to cloned scripts for later restoration\nif(hasScripts){ // Support: QtWebKit\n// jQuery.merge because push.apply(_, arraylike) throws\njQuery.merge(scripts,getAll(node,\"script\"));}}callback.call(this[i],node,i);}if(hasScripts){doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\njQuery.map(scripts,restoreScript); // Evaluate executable scripts on first document insertion\nfor(i = 0;i < hasScripts;i++) {node = scripts[i];if(rscriptType.test(node.type || \"\") && !data_priv.access(node,\"globalEval\") && jQuery.contains(doc,node)){if(node.src){ // Optional AJAX dependency, but won't run scripts if not present\nif(jQuery._evalUrl){jQuery._evalUrl(node.src);}}else {jQuery.globalEval(node.textContent.replace(rcleanScript,\"\"));}}}}}}return this;}});jQuery.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(name,original){jQuery.fn[name] = function(selector){var elems,ret=[],insert=jQuery(selector),last=insert.length - 1,i=0;for(;i <= last;i++) {elems = i === last?this:this.clone(true);jQuery(insert[i])[original](elems); // Support: QtWebKit\n// .get() because push.apply(_, arraylike) throws\npush.apply(ret,elems.get());}return this.pushStack(ret);};});var iframe,elemdisplay={}; /**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */ // Called only from within defaultDisplay\nfunction actualDisplay(name,doc){var style,elem=jQuery(doc.createElement(name)).appendTo(doc.body), // getDefaultComputedStyle might be reliably used only on attached element\ndisplay=window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0]))? // Use of this method is a temporary fix (more like optimization) until something better comes along,\n// since it was removed from specification and supported only in FF\nstyle.display:jQuery.css(elem[0],\"display\"); // We don't have any data stored on the element,\n// so use \"detach\" method as fast way to get rid of the element\nelem.detach();return display;} /**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */function defaultDisplay(nodeName){var doc=document,display=elemdisplay[nodeName];if(!display){display = actualDisplay(nodeName,doc); // If the simple way fails, read from inside an iframe\nif(display === \"none\" || !display){ // Use the already-created iframe if possible\niframe = (iframe || jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(doc.documentElement); // Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\ndoc = iframe[0].contentDocument; // Support: IE\ndoc.write();doc.close();display = actualDisplay(nodeName,doc);iframe.detach();} // Store the correct default display\nelemdisplay[nodeName] = display;}return display;}var rmargin=/^margin/;var rnumnonpx=new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\",\"i\");var getStyles=function getStyles(elem){ // Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n// IE throws on elements created in popups\n// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\nif(elem.ownerDocument.defaultView.opener){return elem.ownerDocument.defaultView.getComputedStyle(elem,null);}return window.getComputedStyle(elem,null);};function curCSS(elem,name,computed){var width,minWidth,maxWidth,ret,style=elem.style;computed = computed || getStyles(elem); // Support: IE9\n// getPropertyValue is only needed for .css('filter') (#12537)\nif(computed){ret = computed.getPropertyValue(name) || computed[name];}if(computed){if(ret === \"\" && !jQuery.contains(elem.ownerDocument,elem)){ret = jQuery.style(elem,name);} // Support: iOS < 6\n// A tribute to the \"awesome hack by Dean Edwards\"\n// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\nif(rnumnonpx.test(ret) && rmargin.test(name)){ // Remember the original values\nwidth = style.width;minWidth = style.minWidth;maxWidth = style.maxWidth; // Put in the new values to get a computed value out\nstyle.minWidth = style.maxWidth = style.width = ret;ret = computed.width; // Revert the changed values\nstyle.width = width;style.minWidth = minWidth;style.maxWidth = maxWidth;}}return ret !== undefined? // Support: IE\n// IE returns zIndex value as an integer.\nret + \"\":ret;}function addGetHookIf(conditionFn,hookFn){ // Define the hook, we'll check on the first run if it's really needed.\nreturn {get:function get(){if(conditionFn()){ // Hook not needed (or it's not possible to use it due\n// to missing dependency), remove it.\ndelete this.get;return;} // Hook needed; redefine it so that the support test is not executed again.\nreturn (this.get = hookFn).apply(this,arguments);}};}(function(){var pixelPositionVal,boxSizingReliableVal,docElem=document.documentElement,container=document.createElement(\"div\"),div=document.createElement(\"div\");if(!div.style){return;} // Support: IE9-11+\n// Style of cloned element affects source element cloned (#8908)\ndiv.style.backgroundClip = \"content-box\";div.cloneNode(true).style.backgroundClip = \"\";support.clearCloneStyle = div.style.backgroundClip === \"content-box\";container.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" + \"position:absolute\";container.appendChild(div); // Executing both pixelPosition & boxSizingReliable tests require only one layout\n// so they're executed at the same time to save the second computation.\nfunction computePixelPositionAndBoxSizingReliable(){div.style.cssText =  // Support: Firefox<29, Android 2.3\n// Vendor-prefix box-sizing\n\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" + \"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" + \"border:1px;padding:1px;width:4px;position:absolute\";div.innerHTML = \"\";docElem.appendChild(container);var divStyle=window.getComputedStyle(div,null);pixelPositionVal = divStyle.top !== \"1%\";boxSizingReliableVal = divStyle.width === \"4px\";docElem.removeChild(container);} // Support: node.js jsdom\n// Don't assume that getComputedStyle is a property of the global object\nif(window.getComputedStyle){jQuery.extend(support,{pixelPosition:function pixelPosition(){ // This test is executed only once but we still do memoizing\n// since we can use the boxSizingReliable pre-computing.\n// No need to check if the test was already performed, though.\ncomputePixelPositionAndBoxSizingReliable();return pixelPositionVal;},boxSizingReliable:function boxSizingReliable(){if(boxSizingReliableVal == null){computePixelPositionAndBoxSizingReliable();}return boxSizingReliableVal;},reliableMarginRight:function reliableMarginRight(){ // Support: Android 2.3\n// Check if div with explicit width and no margin-right incorrectly\n// gets computed margin-right based on width of container. (#3333)\n// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n// This support function is only executed once so no memoizing is needed.\nvar ret,marginDiv=div.appendChild(document.createElement(\"div\")); // Reset CSS: box-sizing; display; margin; border; padding\nmarginDiv.style.cssText = div.style.cssText =  // Support: Firefox<29, Android 2.3\n// Vendor-prefix box-sizing\n\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" + \"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";marginDiv.style.marginRight = marginDiv.style.width = \"0\";div.style.width = \"1px\";docElem.appendChild(container);ret = !parseFloat(window.getComputedStyle(marginDiv,null).marginRight);docElem.removeChild(container);div.removeChild(marginDiv);return ret;}});}})(); // A method for quickly swapping in/out CSS properties to get correct calculations.\njQuery.swap = function(elem,options,callback,args){var ret,name,old={}; // Remember the old values, and insert the new ones\nfor(name in options) {old[name] = elem.style[name];elem.style[name] = options[name];}ret = callback.apply(elem,args || []); // Revert the old values\nfor(name in options) {elem.style[name] = old[name];}return ret;};var  // Swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\nrdisplayswap=/^(none|table(?!-c[ea]).+)/,rnumsplit=new RegExp(\"^(\" + pnum + \")(.*)$\",\"i\"),rrelNum=new RegExp(\"^([+-])=(\" + pnum + \")\",\"i\"),cssShow={position:\"absolute\",visibility:\"hidden\",display:\"block\"},cssNormalTransform={letterSpacing:\"0\",fontWeight:\"400\"},cssPrefixes=[\"Webkit\",\"O\",\"Moz\",\"ms\"]; // Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName(style,name){ // Shortcut for names that are not vendor prefixed\nif(name in style){return name;} // Check for vendor prefixed names\nvar capName=name[0].toUpperCase() + name.slice(1),origName=name,i=cssPrefixes.length;while(i--) {name = cssPrefixes[i] + capName;if(name in style){return name;}}return origName;}function setPositiveNumber(elem,value,subtract){var matches=rnumsplit.exec(value);return matches? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\nMath.max(0,matches[1] - (subtract || 0)) + (matches[2] || \"px\"):value;}function augmentWidthOrHeight(elem,name,extra,isBorderBox,styles){var i=extra === (isBorderBox?\"border\":\"content\")? // If we already have the right measurement, avoid augmentation\n4: // Otherwise initialize for horizontal or vertical properties\nname === \"width\"?1:0,val=0;for(;i < 4;i += 2) { // Both box models exclude margin, so add it if we want it\nif(extra === \"margin\"){val += jQuery.css(elem,extra + cssExpand[i],true,styles);}if(isBorderBox){ // border-box includes padding, so remove it if we want content\nif(extra === \"content\"){val -= jQuery.css(elem,\"padding\" + cssExpand[i],true,styles);} // At this point, extra isn't border nor margin, so remove border\nif(extra !== \"margin\"){val -= jQuery.css(elem,\"border\" + cssExpand[i] + \"Width\",true,styles);}}else { // At this point, extra isn't content, so add padding\nval += jQuery.css(elem,\"padding\" + cssExpand[i],true,styles); // At this point, extra isn't content nor padding, so add border\nif(extra !== \"padding\"){val += jQuery.css(elem,\"border\" + cssExpand[i] + \"Width\",true,styles);}}}return val;}function getWidthOrHeight(elem,name,extra){ // Start with offset property, which is equivalent to the border-box value\nvar valueIsBorderBox=true,val=name === \"width\"?elem.offsetWidth:elem.offsetHeight,styles=getStyles(elem),isBorderBox=jQuery.css(elem,\"boxSizing\",false,styles) === \"border-box\"; // Some non-html elements return undefined for offsetWidth, so check for null/undefined\n// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\nif(val <= 0 || val == null){ // Fall back to computed then uncomputed css if necessary\nval = curCSS(elem,name,styles);if(val < 0 || val == null){val = elem.style[name];} // Computed unit is not pixels. Stop here and return.\nif(rnumnonpx.test(val)){return val;} // Check for style in case a browser which returns unreliable values\n// for getComputedStyle silently falls back to the reliable elem.style\nvalueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]); // Normalize \"\", auto, and prepare for extra\nval = parseFloat(val) || 0;} // Use the active box-sizing model to add/subtract irrelevant styles\nreturn val + augmentWidthOrHeight(elem,name,extra || (isBorderBox?\"border\":\"content\"),valueIsBorderBox,styles) + \"px\";}function showHide(elements,show){var display,elem,hidden,values=[],index=0,length=elements.length;for(;index < length;index++) {elem = elements[index];if(!elem.style){continue;}values[index] = data_priv.get(elem,\"olddisplay\");display = elem.style.display;if(show){ // Reset the inline display of this element to learn if it is\n// being hidden by cascaded rules or not\nif(!values[index] && display === \"none\"){elem.style.display = \"\";} // Set elements which have been overridden with display: none\n// in a stylesheet to whatever the default browser style is\n// for such an element\nif(elem.style.display === \"\" && isHidden(elem)){values[index] = data_priv.access(elem,\"olddisplay\",defaultDisplay(elem.nodeName));}}else {hidden = isHidden(elem);if(display !== \"none\" || !hidden){data_priv.set(elem,\"olddisplay\",hidden?display:jQuery.css(elem,\"display\"));}}} // Set the display of most of the elements in a second loop\n// to avoid the constant reflow\nfor(index = 0;index < length;index++) {elem = elements[index];if(!elem.style){continue;}if(!show || elem.style.display === \"none\" || elem.style.display === \"\"){elem.style.display = show?values[index] || \"\":\"none\";}}return elements;}jQuery.extend({ // Add in style property hooks for overriding the default\n// behavior of getting and setting a style property\ncssHooks:{opacity:{get:function get(elem,computed){if(computed){ // We should always get a number back from opacity\nvar ret=curCSS(elem,\"opacity\");return ret === \"\"?\"1\":ret;}}}}, // Don't automatically add \"px\" to these possibly-unitless properties\ncssNumber:{\"columnCount\":true,\"fillOpacity\":true,\"flexGrow\":true,\"flexShrink\":true,\"fontWeight\":true,\"lineHeight\":true,\"opacity\":true,\"order\":true,\"orphans\":true,\"widows\":true,\"zIndex\":true,\"zoom\":true}, // Add in properties whose names you wish to fix before\n// setting or getting the value\ncssProps:{\"float\":\"cssFloat\"}, // Get and set the style property on a DOM Node\nstyle:function style(elem,name,value,extra){ // Don't set styles on text and comment nodes\nif(!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style){return;} // Make sure that we're working with the right name\nvar ret,type,hooks,origName=jQuery.camelCase(name),style=elem.style;name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style,origName)); // Gets hook for the prefixed version, then unprefixed version\nhooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\nif(value !== undefined){type = typeof value === \"undefined\"?\"undefined\":_typeof(value); // Convert \"+=\" or \"-=\" to relative numbers (#7345)\nif(type === \"string\" && (ret = rrelNum.exec(value))){value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem,name)); // Fixes bug #9237\ntype = \"number\";} // Make sure that null and NaN values aren't set (#7116)\nif(value == null || value !== value){return;} // If a number, add 'px' to the (except for certain CSS properties)\nif(type === \"number\" && !jQuery.cssNumber[origName]){value += \"px\";} // Support: IE9-11+\n// background-* props affect original clone's values\nif(!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0){style[name] = \"inherit\";} // If a hook was provided, use that value, otherwise just set the specified value\nif(!hooks || !(\"set\" in hooks) || (value = hooks.set(elem,value,extra)) !== undefined){style[name] = value;}}else { // If a hook was provided get the non-computed value from there\nif(hooks && \"get\" in hooks && (ret = hooks.get(elem,false,extra)) !== undefined){return ret;} // Otherwise just get the value from the style object\nreturn style[name];}},css:function css(elem,name,extra,styles){var val,num,hooks,origName=jQuery.camelCase(name); // Make sure that we're working with the right name\nname = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style,origName)); // Try prefixed name followed by the unprefixed name\nhooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\nif(hooks && \"get\" in hooks){val = hooks.get(elem,true,extra);} // Otherwise, if a way to get the computed value exists, use that\nif(val === undefined){val = curCSS(elem,name,styles);} // Convert \"normal\" to computed value\nif(val === \"normal\" && name in cssNormalTransform){val = cssNormalTransform[name];} // Make numeric if forced or a qualifier was provided and val looks numeric\nif(extra === \"\" || extra){num = parseFloat(val);return extra === true || jQuery.isNumeric(num)?num || 0:val;}return val;}});jQuery.each([\"height\",\"width\"],function(i,name){jQuery.cssHooks[name] = {get:function get(elem,computed,extra){if(computed){ // Certain elements can have dimension info if we invisibly show them\n// but it must have a current display style that would benefit\nreturn rdisplayswap.test(jQuery.css(elem,\"display\")) && elem.offsetWidth === 0?jQuery.swap(elem,cssShow,function(){return getWidthOrHeight(elem,name,extra);}):getWidthOrHeight(elem,name,extra);}},set:function set(elem,value,extra){var styles=extra && getStyles(elem);return setPositiveNumber(elem,value,extra?augmentWidthOrHeight(elem,name,extra,jQuery.css(elem,\"boxSizing\",false,styles) === \"border-box\",styles):0);}};}); // Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight,function(elem,computed){if(computed){return jQuery.swap(elem,{\"display\":\"inline-block\"},curCSS,[elem,\"marginRight\"]);}}); // These hooks are used by animate to expand properties\njQuery.each({margin:\"\",padding:\"\",border:\"Width\"},function(prefix,suffix){jQuery.cssHooks[prefix + suffix] = {expand:function expand(value){var i=0,expanded={}, // Assumes a single number if not a string\nparts=typeof value === \"string\"?value.split(\" \"):[value];for(;i < 4;i++) {expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];}return expanded;}};if(!rmargin.test(prefix)){jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;}});jQuery.fn.extend({css:function css(name,value){return access(this,function(elem,name,value){var styles,len,map={},i=0;if(jQuery.isArray(name)){styles = getStyles(elem);len = name.length;for(;i < len;i++) {map[name[i]] = jQuery.css(elem,name[i],false,styles);}return map;}return value !== undefined?jQuery.style(elem,name,value):jQuery.css(elem,name);},name,value,arguments.length > 1);},show:function show(){return showHide(this,true);},hide:function hide(){return showHide(this);},toggle:function toggle(state){if(typeof state === \"boolean\"){return state?this.show():this.hide();}return this.each(function(){if(isHidden(this)){jQuery(this).show();}else {jQuery(this).hide();}});}});function Tween(elem,options,prop,end,easing){return new Tween.prototype.init(elem,options,prop,end,easing);}jQuery.Tween = Tween;Tween.prototype = {constructor:Tween,init:function init(elem,options,prop,end,easing,unit){this.elem = elem;this.prop = prop;this.easing = easing || \"swing\";this.options = options;this.start = this.now = this.cur();this.end = end;this.unit = unit || (jQuery.cssNumber[prop]?\"\":\"px\");},cur:function cur(){var hooks=Tween.propHooks[this.prop];return hooks && hooks.get?hooks.get(this):Tween.propHooks._default.get(this);},run:function run(percent){var eased,hooks=Tween.propHooks[this.prop];if(this.options.duration){this.pos = eased = jQuery.easing[this.easing](percent,this.options.duration * percent,0,1,this.options.duration);}else {this.pos = eased = percent;}this.now = (this.end - this.start) * eased + this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this);}if(hooks && hooks.set){hooks.set(this);}else {Tween.propHooks._default.set(this);}return this;}};Tween.prototype.init.prototype = Tween.prototype;Tween.propHooks = {_default:{get:function get(tween){var result;if(tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)){return tween.elem[tween.prop];} // Passing an empty string as a 3rd parameter to .css will automatically\n// attempt a parseFloat and fallback to a string if the parse fails.\n// Simple values such as \"10px\" are parsed to Float;\n// complex values such as \"rotate(1rad)\" are returned as-is.\nresult = jQuery.css(tween.elem,tween.prop,\"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\nreturn !result || result === \"auto\"?0:result;},set:function set(tween){ // Use step hook for back compat.\n// Use cssHook if its there.\n// Use .style if available and use plain properties where available.\nif(jQuery.fx.step[tween.prop]){jQuery.fx.step[tween.prop](tween);}else if(tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])){jQuery.style(tween.elem,tween.prop,tween.now + tween.unit);}else {tween.elem[tween.prop] = tween.now;}}}}; // Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {set:function set(tween){if(tween.elem.nodeType && tween.elem.parentNode){tween.elem[tween.prop] = tween.now;}}};jQuery.easing = {linear:function linear(p){return p;},swing:function swing(p){return 0.5 - Math.cos(p * Math.PI) / 2;}};jQuery.fx = Tween.prototype.init; // Back Compat <1.8 extension point\njQuery.fx.step = {};var fxNow,timerId,rfxtypes=/^(?:toggle|show|hide)$/,rfxnum=new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\",\"i\"),rrun=/queueHooks$/,animationPrefilters=[defaultPrefilter],tweeners={\"*\":[function(prop,value){var tween=this.createTween(prop,value),target=tween.cur(),parts=rfxnum.exec(value),unit=parts && parts[3] || (jQuery.cssNumber[prop]?\"\":\"px\"), // Starting value computation is required for potential unit mismatches\nstart=(jQuery.cssNumber[prop] || unit !== \"px\" && +target) && rfxnum.exec(jQuery.css(tween.elem,prop)),scale=1,maxIterations=20;if(start && start[3] !== unit){ // Trust units reported by jQuery.css\nunit = unit || start[3]; // Make sure we update the tween properties later on\nparts = parts || []; // Iteratively approximate from a nonzero starting point\nstart = +target || 1;do { // If previous iteration zeroed out, double until we get *something*.\n// Use string for doubling so we don't accidentally see scale as unchanged below\nscale = scale || \".5\"; // Adjust and apply\nstart = start / scale;jQuery.style(tween.elem,prop,start + unit); // Update scale, tolerating zero or NaN from tween.cur(),\n// break the loop if scale is unchanged or perfect, or if we've just had enough\n}while(scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);} // Update tween properties\nif(parts){start = tween.start = +start || +target || 0;tween.unit = unit; // If a +=/-= token was provided, we're doing a relative animation\ntween.end = parts[1]?start + (parts[1] + 1) * parts[2]:+parts[2];}return tween;}]}; // Animations created synchronously will run synchronously\nfunction createFxNow(){setTimeout(function(){fxNow = undefined;});return fxNow = jQuery.now();} // Generate parameters to create a standard animation\nfunction genFx(type,includeWidth){var which,i=0,attrs={height:type}; // If we include width, step value is 1 to do all cssExpand values,\n// otherwise step value is 2 to skip over Left and Right\nincludeWidth = includeWidth?1:0;for(;i < 4;i += 2 - includeWidth) {which = cssExpand[i];attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;}if(includeWidth){attrs.opacity = attrs.width = type;}return attrs;}function createTween(value,prop,animation){var tween,collection=(tweeners[prop] || []).concat(tweeners[\"*\"]),index=0,length=collection.length;for(;index < length;index++) {if(tween = collection[index].call(animation,prop,value)){ // We're done with this property\nreturn tween;}}}function defaultPrefilter(elem,props,opts){ /* jshint validthis: true */var prop,value,toggle,tween,hooks,oldfire,display,checkDisplay,anim=this,orig={},style=elem.style,hidden=elem.nodeType && isHidden(elem),dataShow=data_priv.get(elem,\"fxshow\"); // Handle queue: false promises\nif(!opts.queue){hooks = jQuery._queueHooks(elem,\"fx\");if(hooks.unqueued == null){hooks.unqueued = 0;oldfire = hooks.empty.fire;hooks.empty.fire = function(){if(!hooks.unqueued){oldfire();}};}hooks.unqueued++;anim.always(function(){ // Ensure the complete handler is called before this completes\nanim.always(function(){hooks.unqueued--;if(!jQuery.queue(elem,\"fx\").length){hooks.empty.fire();}});});} // Height/width overflow pass\nif(elem.nodeType === 1 && (\"height\" in props || \"width\" in props)){ // Make sure that nothing sneaks out\n// Record all 3 overflow attributes because IE9-10 do not\n// change the overflow attribute when overflowX and\n// overflowY are set to the same value\nopts.overflow = [style.overflow,style.overflowX,style.overflowY]; // Set display property to inline-block for height/width\n// animations on inline elements that are having width/height animated\ndisplay = jQuery.css(elem,\"display\"); // Test default display if display is currently \"none\"\ncheckDisplay = display === \"none\"?data_priv.get(elem,\"olddisplay\") || defaultDisplay(elem.nodeName):display;if(checkDisplay === \"inline\" && jQuery.css(elem,\"float\") === \"none\"){style.display = \"inline-block\";}}if(opts.overflow){style.overflow = \"hidden\";anim.always(function(){style.overflow = opts.overflow[0];style.overflowX = opts.overflow[1];style.overflowY = opts.overflow[2];});} // show/hide pass\nfor(prop in props) {value = props[prop];if(rfxtypes.exec(value)){delete props[prop];toggle = toggle || value === \"toggle\";if(value === (hidden?\"hide\":\"show\")){ // If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\nif(value === \"show\" && dataShow && dataShow[prop] !== undefined){hidden = true;}else {continue;}}orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem,prop); // Any non-fx value stops us from restoring the original display value\n}else {display = undefined;}}if(!jQuery.isEmptyObject(orig)){if(dataShow){if(\"hidden\" in dataShow){hidden = dataShow.hidden;}}else {dataShow = data_priv.access(elem,\"fxshow\",{});} // Store state if its toggle - enables .stop().toggle() to \"reverse\"\nif(toggle){dataShow.hidden = !hidden;}if(hidden){jQuery(elem).show();}else {anim.done(function(){jQuery(elem).hide();});}anim.done(function(){var prop;data_priv.remove(elem,\"fxshow\");for(prop in orig) {jQuery.style(elem,prop,orig[prop]);}});for(prop in orig) {tween = createTween(hidden?dataShow[prop]:0,prop,anim);if(!(prop in dataShow)){dataShow[prop] = tween.start;if(hidden){tween.end = tween.start;tween.start = prop === \"width\" || prop === \"height\"?1:0;}}} // If this is a noop like .hide().hide(), restore an overwritten display value\n}else if((display === \"none\"?defaultDisplay(elem.nodeName):display) === \"inline\"){style.display = display;}}function propFilter(props,specialEasing){var index,name,easing,value,hooks; // camelCase, specialEasing and expand cssHook pass\nfor(index in props) {name = jQuery.camelCase(index);easing = specialEasing[name];value = props[index];if(jQuery.isArray(value)){easing = value[1];value = props[index] = value[0];}if(index !== name){props[name] = value;delete props[index];}hooks = jQuery.cssHooks[name];if(hooks && \"expand\" in hooks){value = hooks.expand(value);delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n// Reusing 'index' because we have the correct \"name\"\nfor(index in value) {if(!(index in props)){props[index] = value[index];specialEasing[index] = easing;}}}else {specialEasing[name] = easing;}}}function Animation(elem,properties,options){var result,stopped,index=0,length=animationPrefilters.length,deferred=jQuery.Deferred().always(function(){ // Don't match elem in the :animated selector\ndelete tick.elem;}),tick=function tick(){if(stopped){return false;}var currentTime=fxNow || createFxNow(),remaining=Math.max(0,animation.startTime + animation.duration - currentTime), // Support: Android 2.3\n// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\ntemp=remaining / animation.duration || 0,percent=1 - temp,index=0,length=animation.tweens.length;for(;index < length;index++) {animation.tweens[index].run(percent);}deferred.notifyWith(elem,[animation,percent,remaining]);if(percent < 1 && length){return remaining;}else {deferred.resolveWith(elem,[animation]);return false;}},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(true,{specialEasing:{}},options),originalProperties:properties,originalOptions:options,startTime:fxNow || createFxNow(),duration:options.duration,tweens:[],createTween:function createTween(prop,end){var tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop] || animation.opts.easing);animation.tweens.push(tween);return tween;},stop:function stop(gotoEnd){var index=0, // If we are going to the end, we want to run all the tweens\n// otherwise we skip this part\nlength=gotoEnd?animation.tweens.length:0;if(stopped){return this;}stopped = true;for(;index < length;index++) {animation.tweens[index].run(1);} // Resolve when we played the last frame; otherwise, reject\nif(gotoEnd){deferred.resolveWith(elem,[animation,gotoEnd]);}else {deferred.rejectWith(elem,[animation,gotoEnd]);}return this;}}),props=animation.props;propFilter(props,animation.opts.specialEasing);for(;index < length;index++) {result = animationPrefilters[index].call(animation,elem,props,animation.opts);if(result){return result;}}jQuery.map(props,createTween,animation);if(jQuery.isFunction(animation.opts.start)){animation.opts.start.call(elem,animation);}jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue})); // attach callbacks from options\nreturn animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);}jQuery.Animation = jQuery.extend(Animation,{tweener:function tweener(props,callback){if(jQuery.isFunction(props)){callback = props;props = [\"*\"];}else {props = props.split(\" \");}var prop,index=0,length=props.length;for(;index < length;index++) {prop = props[index];tweeners[prop] = tweeners[prop] || [];tweeners[prop].unshift(callback);}},prefilter:function prefilter(callback,prepend){if(prepend){animationPrefilters.unshift(callback);}else {animationPrefilters.push(callback);}}});jQuery.speed = function(speed,easing,fn){var opt=speed && (typeof speed === \"undefined\"?\"undefined\":_typeof(speed)) === \"object\"?jQuery.extend({},speed):{complete:fn || !fn && easing || jQuery.isFunction(speed) && speed,duration:speed,easing:fn && easing || easing && !jQuery.isFunction(easing) && easing};opt.duration = jQuery.fx.off?0:typeof opt.duration === \"number\"?opt.duration:opt.duration in jQuery.fx.speeds?jQuery.fx.speeds[opt.duration]:jQuery.fx.speeds._default; // Normalize opt.queue - true/undefined/null -> \"fx\"\nif(opt.queue == null || opt.queue === true){opt.queue = \"fx\";} // Queueing\nopt.old = opt.complete;opt.complete = function(){if(jQuery.isFunction(opt.old)){opt.old.call(this);}if(opt.queue){jQuery.dequeue(this,opt.queue);}};return opt;};jQuery.fn.extend({fadeTo:function fadeTo(speed,to,easing,callback){ // Show any hidden elements after setting opacity to 0\nreturn this.filter(isHidden).css(\"opacity\",0).show() // Animate to the value specified\n.end().animate({opacity:to},speed,easing,callback);},animate:function animate(prop,speed,easing,callback){var empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function doAnimation(){ // Operate on a copy of prop so per-property easing won't be lost\nvar anim=Animation(this,jQuery.extend({},prop),optall); // Empty animations, or finishing resolves immediately\nif(empty || data_priv.get(this,\"finish\")){anim.stop(true);}};doAnimation.finish = doAnimation;return empty || optall.queue === false?this.each(doAnimation):this.queue(optall.queue,doAnimation);},stop:function stop(type,clearQueue,gotoEnd){var stopQueue=function stopQueue(hooks){var stop=hooks.stop;delete hooks.stop;stop(gotoEnd);};if(typeof type !== \"string\"){gotoEnd = clearQueue;clearQueue = type;type = undefined;}if(clearQueue && type !== false){this.queue(type || \"fx\",[]);}return this.each(function(){var dequeue=true,index=type != null && type + \"queueHooks\",timers=jQuery.timers,data=data_priv.get(this);if(index){if(data[index] && data[index].stop){stopQueue(data[index]);}}else {for(index in data) {if(data[index] && data[index].stop && rrun.test(index)){stopQueue(data[index]);}}}for(index = timers.length;index--;) {if(timers[index].elem === this && (type == null || timers[index].queue === type)){timers[index].anim.stop(gotoEnd);dequeue = false;timers.splice(index,1);}} // Start the next in the queue if the last step wasn't forced.\n// Timers currently will call their complete callbacks, which\n// will dequeue but only if they were gotoEnd.\nif(dequeue || !gotoEnd){jQuery.dequeue(this,type);}});},finish:function finish(type){if(type !== false){type = type || \"fx\";}return this.each(function(){var index,data=data_priv.get(this),queue=data[type + \"queue\"],hooks=data[type + \"queueHooks\"],timers=jQuery.timers,length=queue?queue.length:0; // Enable finishing flag on private data\ndata.finish = true; // Empty the queue first\njQuery.queue(this,type,[]);if(hooks && hooks.stop){hooks.stop.call(this,true);} // Look for any active animations, and finish them\nfor(index = timers.length;index--;) {if(timers[index].elem === this && timers[index].queue === type){timers[index].anim.stop(true);timers.splice(index,1);}} // Look for any animations in the old queue and finish them\nfor(index = 0;index < length;index++) {if(queue[index] && queue[index].finish){queue[index].finish.call(this);}} // Turn off finishing flag\ndelete data.finish;});}});jQuery.each([\"toggle\",\"show\",\"hide\"],function(i,name){var cssFn=jQuery.fn[name];jQuery.fn[name] = function(speed,easing,callback){return speed == null || typeof speed === \"boolean\"?cssFn.apply(this,arguments):this.animate(genFx(name,true),speed,easing,callback);};}); // Generate shortcuts for custom animations\njQuery.each({slideDown:genFx(\"show\"),slideUp:genFx(\"hide\"),slideToggle:genFx(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(name,props){jQuery.fn[name] = function(speed,easing,callback){return this.animate(props,speed,easing,callback);};});jQuery.timers = [];jQuery.fx.tick = function(){var timer,i=0,timers=jQuery.timers;fxNow = jQuery.now();for(;i < timers.length;i++) {timer = timers[i]; // Checks the timer has not already been removed\nif(!timer() && timers[i] === timer){timers.splice(i--,1);}}if(!timers.length){jQuery.fx.stop();}fxNow = undefined;};jQuery.fx.timer = function(timer){jQuery.timers.push(timer);if(timer()){jQuery.fx.start();}else {jQuery.timers.pop();}};jQuery.fx.interval = 13;jQuery.fx.start = function(){if(!timerId){timerId = setInterval(jQuery.fx.tick,jQuery.fx.interval);}};jQuery.fx.stop = function(){clearInterval(timerId);timerId = null;};jQuery.fx.speeds = {slow:600,fast:200, // Default speed\n_default:400}; // Based off of the plugin by Clint Helfers, with permission.\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function(time,type){time = jQuery.fx?jQuery.fx.speeds[time] || time:time;type = type || \"fx\";return this.queue(type,function(next,hooks){var timeout=setTimeout(next,time);hooks.stop = function(){clearTimeout(timeout);};});};(function(){var input=document.createElement(\"input\"),select=document.createElement(\"select\"),opt=select.appendChild(document.createElement(\"option\"));input.type = \"checkbox\"; // Support: iOS<=5.1, Android<=4.2+\n// Default value for a checkbox should be \"on\"\nsupport.checkOn = input.value !== \"\"; // Support: IE<=11+\n// Must access selectedIndex to make default options select\nsupport.optSelected = opt.selected; // Support: Android<=2.3\n// Options inside disabled selects are incorrectly marked as disabled\nselect.disabled = true;support.optDisabled = !opt.disabled; // Support: IE<=11+\n// An input loses its value after becoming a radio\ninput = document.createElement(\"input\");input.value = \"t\";input.type = \"radio\";support.radioValue = input.value === \"t\";})();var nodeHook,boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function attr(name,value){return access(this,jQuery.attr,name,value,arguments.length > 1);},removeAttr:function removeAttr(name){return this.each(function(){jQuery.removeAttr(this,name);});}});jQuery.extend({attr:function attr(elem,name,value){var hooks,ret,nType=elem.nodeType; // don't get/set attributes on text, comment and attribute nodes\nif(!elem || nType === 3 || nType === 8 || nType === 2){return;} // Fallback to prop when attributes are not supported\nif(_typeof(elem.getAttribute) === strundefined){return jQuery.prop(elem,name,value);} // All attributes are lowercase\n// Grab necessary hook if one is defined\nif(nType !== 1 || !jQuery.isXMLDoc(elem)){name = name.toLowerCase();hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name)?boolHook:nodeHook);}if(value !== undefined){if(value === null){jQuery.removeAttr(elem,name);}else if(hooks && \"set\" in hooks && (ret = hooks.set(elem,value,name)) !== undefined){return ret;}else {elem.setAttribute(name,value + \"\");return value;}}else if(hooks && \"get\" in hooks && (ret = hooks.get(elem,name)) !== null){return ret;}else {ret = jQuery.find.attr(elem,name); // Non-existent attributes return null, we normalize to undefined\nreturn ret == null?undefined:ret;}},removeAttr:function removeAttr(elem,value){var name,propName,i=0,attrNames=value && value.match(rnotwhite);if(attrNames && elem.nodeType === 1){while(name = attrNames[i++]) {propName = jQuery.propFix[name] || name; // Boolean attributes get special treatment (#10870)\nif(jQuery.expr.match.bool.test(name)){ // Set corresponding property to false\nelem[propName] = false;}elem.removeAttribute(name);}}},attrHooks:{type:{set:function set(elem,value){if(!support.radioValue && value === \"radio\" && jQuery.nodeName(elem,\"input\")){var val=elem.value;elem.setAttribute(\"type\",value);if(val){elem.value = val;}return value;}}}}}); // Hooks for boolean attributes\nboolHook = {set:function set(elem,value,name){if(value === false){ // Remove boolean attributes when set to false\njQuery.removeAttr(elem,name);}else {elem.setAttribute(name,name);}return name;}};jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g),function(i,name){var getter=attrHandle[name] || jQuery.find.attr;attrHandle[name] = function(elem,name,isXML){var ret,handle;if(!isXML){ // Avoid an infinite loop by temporarily removing this function from the getter\nhandle = attrHandle[name];attrHandle[name] = ret;ret = getter(elem,name,isXML) != null?name.toLowerCase():null;attrHandle[name] = handle;}return ret;};});var rfocusable=/^(?:input|select|textarea|button)$/i;jQuery.fn.extend({prop:function prop(name,value){return access(this,jQuery.prop,name,value,arguments.length > 1);},removeProp:function removeProp(name){return this.each(function(){delete this[jQuery.propFix[name] || name];});}});jQuery.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function prop(elem,name,value){var ret,hooks,notxml,nType=elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\nif(!elem || nType === 3 || nType === 8 || nType === 2){return;}notxml = nType !== 1 || !jQuery.isXMLDoc(elem);if(notxml){ // Fix name and attach hooks\nname = jQuery.propFix[name] || name;hooks = jQuery.propHooks[name];}if(value !== undefined){return hooks && \"set\" in hooks && (ret = hooks.set(elem,value,name)) !== undefined?ret:elem[name] = value;}else {return hooks && \"get\" in hooks && (ret = hooks.get(elem,name)) !== null?ret:elem[name];}},propHooks:{tabIndex:{get:function get(elem){return elem.hasAttribute(\"tabindex\") || rfocusable.test(elem.nodeName) || elem.href?elem.tabIndex:-1;}}}});if(!support.optSelected){jQuery.propHooks.selected = {get:function get(elem){var parent=elem.parentNode;if(parent && parent.parentNode){parent.parentNode.selectedIndex;}return null;}};}jQuery.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){jQuery.propFix[this.toLowerCase()] = this;});var rclass=/[\\t\\r\\n\\f]/g;jQuery.fn.extend({addClass:function addClass(value){var classes,elem,cur,clazz,j,finalValue,proceed=typeof value === \"string\" && value,i=0,len=this.length;if(jQuery.isFunction(value)){return this.each(function(j){jQuery(this).addClass(value.call(this,j,this.className));});}if(proceed){ // The disjunction here is for better compressibility (see removeClass)\nclasses = (value || \"\").match(rnotwhite) || [];for(;i < len;i++) {elem = this[i];cur = elem.nodeType === 1 && (elem.className?(\" \" + elem.className + \" \").replace(rclass,\" \"):\" \");if(cur){j = 0;while(clazz = classes[j++]) {if(cur.indexOf(\" \" + clazz + \" \") < 0){cur += clazz + \" \";}} // only assign if different to avoid unneeded rendering.\nfinalValue = jQuery.trim(cur);if(elem.className !== finalValue){elem.className = finalValue;}}}}return this;},removeClass:function removeClass(value){var classes,elem,cur,clazz,j,finalValue,proceed=arguments.length === 0 || typeof value === \"string\" && value,i=0,len=this.length;if(jQuery.isFunction(value)){return this.each(function(j){jQuery(this).removeClass(value.call(this,j,this.className));});}if(proceed){classes = (value || \"\").match(rnotwhite) || [];for(;i < len;i++) {elem = this[i]; // This expression is here for better compressibility (see addClass)\ncur = elem.nodeType === 1 && (elem.className?(\" \" + elem.className + \" \").replace(rclass,\" \"):\"\");if(cur){j = 0;while(clazz = classes[j++]) { // Remove *all* instances\nwhile(cur.indexOf(\" \" + clazz + \" \") >= 0) {cur = cur.replace(\" \" + clazz + \" \",\" \");}} // Only assign if different to avoid unneeded rendering.\nfinalValue = value?jQuery.trim(cur):\"\";if(elem.className !== finalValue){elem.className = finalValue;}}}}return this;},toggleClass:function toggleClass(value,stateVal){var type=typeof value === \"undefined\"?\"undefined\":_typeof(value);if(typeof stateVal === \"boolean\" && type === \"string\"){return stateVal?this.addClass(value):this.removeClass(value);}if(jQuery.isFunction(value)){return this.each(function(i){jQuery(this).toggleClass(value.call(this,i,this.className,stateVal),stateVal);});}return this.each(function(){if(type === \"string\"){ // Toggle individual class names\nvar className,i=0,self=jQuery(this),classNames=value.match(rnotwhite) || [];while(className = classNames[i++]) { // Check each className given, space separated list\nif(self.hasClass(className)){self.removeClass(className);}else {self.addClass(className);}} // Toggle whole class name\n}else if(type === strundefined || type === \"boolean\"){if(this.className){ // store className if set\ndata_priv.set(this,\"__className__\",this.className);} // If the element has a class name or if we're passed `false`,\n// then remove the whole classname (if there was one, the above saved it).\n// Otherwise bring back whatever was previously saved (if anything),\n// falling back to the empty string if nothing was stored.\nthis.className = this.className || value === false?\"\":data_priv.get(this,\"__className__\") || \"\";}});},hasClass:function hasClass(selector){var className=\" \" + selector + \" \",i=0,l=this.length;for(;i < l;i++) {if(this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass,\" \").indexOf(className) >= 0){return true;}}return false;}});var rreturn=/\\r/g;jQuery.fn.extend({val:function val(value){var hooks,ret,isFunction,elem=this[0];if(!arguments.length){if(elem){hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];if(hooks && \"get\" in hooks && (ret = hooks.get(elem,\"value\")) !== undefined){return ret;}ret = elem.value;return typeof ret === \"string\"? // Handle most common string cases\nret.replace(rreturn,\"\"): // Handle cases where value is null/undef or number\nret == null?\"\":ret;}return;}isFunction = jQuery.isFunction(value);return this.each(function(i){var val;if(this.nodeType !== 1){return;}if(isFunction){val = value.call(this,i,jQuery(this).val());}else {val = value;} // Treat null/undefined as \"\"; convert numbers to string\nif(val == null){val = \"\";}else if(typeof val === \"number\"){val += \"\";}else if(jQuery.isArray(val)){val = jQuery.map(val,function(value){return value == null?\"\":value + \"\";});}hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\nif(!hooks || !(\"set\" in hooks) || hooks.set(this,val,\"value\") === undefined){this.value = val;}});}});jQuery.extend({valHooks:{option:{get:function get(elem){var val=jQuery.find.attr(elem,\"value\");return val != null?val: // Support: IE10-11+\n// option.text throws exceptions (#14686, #14858)\njQuery.trim(jQuery.text(elem));}},select:{get:function get(elem){var value,option,options=elem.options,index=elem.selectedIndex,one=elem.type === \"select-one\" || index < 0,values=one?null:[],max=one?index + 1:options.length,i=index < 0?max:one?index:0; // Loop through all the selected options\nfor(;i < max;i++) {option = options[i]; // IE6-9 doesn't update selected after form reset (#2551)\nif((option.selected || i === index) && ( // Don't return options that are disabled or in a disabled optgroup\nsupport.optDisabled?!option.disabled:option.getAttribute(\"disabled\") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode,\"optgroup\"))){ // Get the specific value for the option\nvalue = jQuery(option).val(); // We don't need an array for one selects\nif(one){return value;} // Multi-Selects return an array\nvalues.push(value);}}return values;},set:function set(elem,value){var optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;while(i--) {option = options[i];if(option.selected = jQuery.inArray(option.value,values) >= 0){optionSet = true;}} // Force browsers to behave consistently when non-matching value is set\nif(!optionSet){elem.selectedIndex = -1;}return values;}}}}); // Radios and checkboxes getter/setter\njQuery.each([\"radio\",\"checkbox\"],function(){jQuery.valHooks[this] = {set:function set(elem,value){if(jQuery.isArray(value)){return elem.checked = jQuery.inArray(jQuery(elem).val(),value) >= 0;}}};if(!support.checkOn){jQuery.valHooks[this].get = function(elem){return elem.getAttribute(\"value\") === null?\"on\":elem.value;};}}); // Return jQuery for attributes-only inclusion\njQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup error contextmenu\").split(\" \"),function(i,name){ // Handle event binding\njQuery.fn[name] = function(data,fn){return arguments.length > 0?this.on(name,null,data,fn):this.trigger(name);};});jQuery.fn.extend({hover:function hover(fnOver,fnOut){return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);},bind:function bind(types,data,fn){return this.on(types,null,data,fn);},unbind:function unbind(types,fn){return this.off(types,null,fn);},delegate:function delegate(selector,types,data,fn){return this.on(types,selector,data,fn);},undelegate:function undelegate(selector,types,fn){ // ( namespace ) or ( selector, types [, fn] )\nreturn arguments.length === 1?this.off(selector,\"**\"):this.off(types,selector || \"**\",fn);}});var nonce=jQuery.now();var rquery=/\\?/; // Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function(data){return JSON.parse(data + \"\");}; // Cross-browser xml parsing\njQuery.parseXML = function(data){var xml,tmp;if(!data || typeof data !== \"string\"){return null;} // Support: IE9\ntry{tmp = new DOMParser();xml = tmp.parseFromString(data,\"text/xml\");}catch(e) {xml = undefined;}if(!xml || xml.getElementsByTagName(\"parsererror\").length){jQuery.error(\"Invalid XML: \" + data);}return xml;};var rhash=/#.*$/,rts=/([?&])_=[^&]*/,rheaders=/^(.*?):[ \\t]*([^\\r\\n]*)$/mg, // #7653, #8125, #8152: local protocol detection\nrlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\\/\\//,rurl=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/, /* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */prefilters={}, /* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */transports={}, // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\nallTypes=\"*/\".concat(\"*\"), // Document location\najaxLocation=window.location.href, // Segment location into parts\najaxLocParts=rurl.exec(ajaxLocation.toLowerCase()) || []; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports(structure){ // dataTypeExpression is optional and defaults to \"*\"\nreturn function(dataTypeExpression,func){if(typeof dataTypeExpression !== \"string\"){func = dataTypeExpression;dataTypeExpression = \"*\";}var dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnotwhite) || [];if(jQuery.isFunction(func)){ // For each dataType in the dataTypeExpression\nwhile(dataType = dataTypes[i++]) { // Prepend if requested\nif(dataType[0] === \"+\"){dataType = dataType.slice(1) || \"*\";(structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n}else {(structure[dataType] = structure[dataType] || []).push(func);}}}};} // Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){var inspected={},seekingTransport=structure === transports;function inspect(dataType){var selected;inspected[dataType] = true;jQuery.each(structure[dataType] || [],function(_,prefilterOrFactory){var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);if(typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]){options.dataTypes.unshift(dataTypeOrTransport);inspect(dataTypeOrTransport);return false;}else if(seekingTransport){return !(selected = dataTypeOrTransport);}});return selected;}return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");} // A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend(target,src){var key,deep,flatOptions=jQuery.ajaxSettings.flatOptions || {};for(key in src) {if(src[key] !== undefined){(flatOptions[key]?target:deep || (deep = {}))[key] = src[key];}}if(deep){jQuery.extend(true,target,deep);}return target;} /* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */function ajaxHandleResponses(s,jqXHR,responses){var ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes; // Remove auto dataType and get content-type in the process\nwhile(dataTypes[0] === \"*\") {dataTypes.shift();if(ct === undefined){ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");}} // Check if we're dealing with a known content-type\nif(ct){for(type in contents) {if(contents[type] && contents[type].test(ct)){dataTypes.unshift(type);break;}}} // Check to see if we have a response for the expected dataType\nif(dataTypes[0] in responses){finalDataType = dataTypes[0];}else { // Try convertible dataTypes\nfor(type in responses) {if(!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]){finalDataType = type;break;}if(!firstDataType){firstDataType = type;}} // Or just use first one\nfinalDataType = finalDataType || firstDataType;} // If we found a dataType\n// We add the dataType to the list if needed\n// and return the corresponding response\nif(finalDataType){if(finalDataType !== dataTypes[0]){dataTypes.unshift(finalDataType);}return responses[finalDataType];}} /* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */function ajaxConvert(s,response,jqXHR,isSuccess){var conv2,current,conv,tmp,prev,converters={}, // Work with a copy of dataTypes in case we need to modify it for conversion\ndataTypes=s.dataTypes.slice(); // Create converters map with lowercased keys\nif(dataTypes[1]){for(conv in s.converters) {converters[conv.toLowerCase()] = s.converters[conv];}}current = dataTypes.shift(); // Convert to each sequential dataType\nwhile(current) {if(s.responseFields[current]){jqXHR[s.responseFields[current]] = response;} // Apply the dataFilter if provided\nif(!prev && isSuccess && s.dataFilter){response = s.dataFilter(response,s.dataType);}prev = current;current = dataTypes.shift();if(current){ // There's only work to do if current dataType is non-auto\nif(current === \"*\"){current = prev; // Convert response if prev dataType is non-auto and differs from current\n}else if(prev !== \"*\" && prev !== current){ // Seek a direct converter\nconv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\nif(!conv){for(conv2 in converters) { // If conv2 outputs current\ntmp = conv2.split(\" \");if(tmp[1] === current){ // If prev can be converted to accepted input\nconv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];if(conv){ // Condense equivalence converters\nif(conv === true){conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n}else if(converters[conv2] !== true){current = tmp[0];dataTypes.unshift(tmp[1]);}break;}}}} // Apply converter (if not an equivalence)\nif(conv !== true){ // Unless errors are allowed to bubble, catch and return them\nif(conv && s[\"throws\"]){response = conv(response);}else {try{response = conv(response);}catch(e) {return {state:\"parsererror\",error:conv?e:\"No conversion from \" + prev + \" to \" + current};}}}}}}return {state:\"success\",data:response};}jQuery.extend({ // Counter for holding the number of active queries\nactive:0, // Last-Modified header cache for next request\nlastModified:{},etag:{},ajaxSettings:{url:ajaxLocation,type:\"GET\",isLocal:rlocalProtocol.test(ajaxLocParts[1]),global:true,processData:true,async:true,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\", /*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/accepts:{\"*\":allTypes,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"}, // Data converters\n// Keys separate source (or catchall \"*\") and destination types with a single space\nconverters:{ // Convert anything to text\n\"* text\":String, // Text to html (true = no transformation)\n\"text html\":true, // Evaluate text as a json expression\n\"text json\":jQuery.parseJSON, // Parse text as xml\n\"text xml\":jQuery.parseXML}, // For options that shouldn't be deep extended:\n// you can add your own custom options here if\n// and when you create one that shouldn't be\n// deep extended (see ajaxExtend)\nflatOptions:{url:true,context:true}}, // Creates a full fledged settings object into target\n// with both ajaxSettings and settings fields.\n// If target is omitted, writes into ajaxSettings.\najaxSetup:function ajaxSetup(target,settings){return settings? // Building a settings object\najaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings): // Extending ajaxSettings\najaxExtend(jQuery.ajaxSettings,target);},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports), // Main method\najax:function ajax(url,options){ // If url is an object, simulate pre-1.5 signature\nif((typeof url === \"undefined\"?\"undefined\":_typeof(url)) === \"object\"){options = url;url = undefined;} // Force options to be an object\noptions = options || {};var transport, // URL without anti-cache param\ncacheURL, // Response headers\nresponseHeadersString,responseHeaders, // timeout handle\ntimeoutTimer, // Cross-domain detection vars\nparts, // To know if global events are to be dispatched\nfireGlobals, // Loop variable\ni, // Create the final options object\ns=jQuery.ajaxSetup({},options), // Callbacks context\ncallbackContext=s.context || s, // Context for global events is callbackContext if it is a DOM node or jQuery collection\nglobalEventContext=s.context && (callbackContext.nodeType || callbackContext.jquery)?jQuery(callbackContext):jQuery.event, // Deferreds\ndeferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks(\"once memory\"), // Status-dependent callbacks\n_statusCode=s.statusCode || {}, // Headers (they are sent all at once)\nrequestHeaders={},requestHeadersNames={}, // The jqXHR state\nstate=0, // Default abort message\nstrAbort=\"canceled\", // Fake xhr\njqXHR={readyState:0, // Builds headers hashtable if needed\ngetResponseHeader:function getResponseHeader(key){var match;if(state === 2){if(!responseHeaders){responseHeaders = {};while(match = rheaders.exec(responseHeadersString)) {responseHeaders[match[1].toLowerCase()] = match[2];}}match = responseHeaders[key.toLowerCase()];}return match == null?null:match;}, // Raw string\ngetAllResponseHeaders:function getAllResponseHeaders(){return state === 2?responseHeadersString:null;}, // Caches the header\nsetRequestHeader:function setRequestHeader(name,value){var lname=name.toLowerCase();if(!state){name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;requestHeaders[name] = value;}return this;}, // Overrides response content-type header\noverrideMimeType:function overrideMimeType(type){if(!state){s.mimeType = type;}return this;}, // Status-dependent callbacks\nstatusCode:function statusCode(map){var code;if(map){if(state < 2){for(code in map) { // Lazy-add the new callback in a way that preserves old ones\n_statusCode[code] = [_statusCode[code],map[code]];}}else { // Execute the appropriate callbacks\njqXHR.always(map[jqXHR.status]);}}return this;}, // Cancel the request\nabort:function abort(statusText){var finalText=statusText || strAbort;if(transport){transport.abort(finalText);}done(0,finalText);return this;}}; // Attach deferreds\ndeferred.promise(jqXHR).complete = completeDeferred.add;jqXHR.success = jqXHR.done;jqXHR.error = jqXHR.fail; // Remove hash character (#7531: and string promotion)\n// Add protocol if not provided (prefilters might expect it)\n// Handle falsy url in the settings object (#10093: consistency with old signature)\n// We also use the url parameter if available\ns.url = ((url || s.url || ajaxLocation) + \"\").replace(rhash,\"\").replace(rprotocol,ajaxLocParts[1] + \"//\"); // Alias method option to type as per ticket #12004\ns.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\ns.dataTypes = jQuery.trim(s.dataType || \"*\").toLowerCase().match(rnotwhite) || [\"\"]; // A cross-domain request is in order when we have a protocol:host:port mismatch\nif(s.crossDomain == null){parts = rurl.exec(s.url.toLowerCase());s.crossDomain = !!(parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === \"http:\"?\"80\":\"443\")) !== (ajaxLocParts[3] || (ajaxLocParts[1] === \"http:\"?\"80\":\"443\"))));} // Convert data if not already a string\nif(s.data && s.processData && typeof s.data !== \"string\"){s.data = jQuery.param(s.data,s.traditional);} // Apply prefilters\ninspectPrefiltersOrTransports(prefilters,s,options,jqXHR); // If request was aborted inside a prefilter, stop there\nif(state === 2){return jqXHR;} // We can fire global events as of now if asked to\n// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\nfireGlobals = jQuery.event && s.global; // Watch for a new set of requests\nif(fireGlobals && jQuery.active++ === 0){jQuery.event.trigger(\"ajaxStart\");} // Uppercase the type\ns.type = s.type.toUpperCase(); // Determine if request has content\ns.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n// and/or If-None-Match header later on\ncacheURL = s.url; // More options handling for requests with no content\nif(!s.hasContent){ // If data is available, append data to url\nif(s.data){cacheURL = s.url += (rquery.test(cacheURL)?\"&\":\"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\ndelete s.data;} // Add anti-cache in url if needed\nif(s.cache === false){s.url = rts.test(cacheURL)? // If there is already a '_' parameter, set its value\ncacheURL.replace(rts,\"$1_=\" + nonce++): // Otherwise add one to the end\ncacheURL + (rquery.test(cacheURL)?\"&\":\"?\") + \"_=\" + nonce++;}} // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\nif(s.ifModified){if(jQuery.lastModified[cacheURL]){jqXHR.setRequestHeader(\"If-Modified-Since\",jQuery.lastModified[cacheURL]);}if(jQuery.etag[cacheURL]){jqXHR.setRequestHeader(\"If-None-Match\",jQuery.etag[cacheURL]);}} // Set the correct header, if data is being sent\nif(s.data && s.hasContent && s.contentType !== false || options.contentType){jqXHR.setRequestHeader(\"Content-Type\",s.contentType);} // Set the Accepts header for the server, depending on the dataType\njqXHR.setRequestHeader(\"Accept\",s.dataTypes[0] && s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\"?\", \" + allTypes + \"; q=0.01\":\"\"):s.accepts[\"*\"]); // Check for headers option\nfor(i in s.headers) {jqXHR.setRequestHeader(i,s.headers[i]);} // Allow custom headers/mimetypes and early abort\nif(s.beforeSend && (s.beforeSend.call(callbackContext,jqXHR,s) === false || state === 2)){ // Abort if not done already and return\nreturn jqXHR.abort();} // Aborting is no longer a cancellation\nstrAbort = \"abort\"; // Install callbacks on deferreds\nfor(i in {success:1,error:1,complete:1}) {jqXHR[i](s[i]);} // Get transport\ntransport = inspectPrefiltersOrTransports(transports,s,options,jqXHR); // If no transport, we auto-abort\nif(!transport){done(-1,\"No Transport\");}else {jqXHR.readyState = 1; // Send global event\nif(fireGlobals){globalEventContext.trigger(\"ajaxSend\",[jqXHR,s]);} // Timeout\nif(s.async && s.timeout > 0){timeoutTimer = setTimeout(function(){jqXHR.abort(\"timeout\");},s.timeout);}try{state = 1;transport.send(requestHeaders,done);}catch(e) { // Propagate exception as error if not done\nif(state < 2){done(-1,e); // Simply rethrow otherwise\n}else {throw e;}}} // Callback for when everything is done\nfunction done(status,nativeStatusText,responses,headers){var isSuccess,success,error,response,modified,statusText=nativeStatusText; // Called once\nif(state === 2){return;} // State is \"done\" now\nstate = 2; // Clear timeout if it exists\nif(timeoutTimer){clearTimeout(timeoutTimer);} // Dereference transport for early garbage collection\n// (no matter how long the jqXHR object will be used)\ntransport = undefined; // Cache response headers\nresponseHeadersString = headers || \"\"; // Set readyState\njqXHR.readyState = status > 0?4:0; // Determine if successful\nisSuccess = status >= 200 && status < 300 || status === 304; // Get response data\nif(responses){response = ajaxHandleResponses(s,jqXHR,responses);} // Convert no matter what (that way responseXXX fields are always set)\nresponse = ajaxConvert(s,response,jqXHR,isSuccess); // If successful, handle type chaining\nif(isSuccess){ // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\nif(s.ifModified){modified = jqXHR.getResponseHeader(\"Last-Modified\");if(modified){jQuery.lastModified[cacheURL] = modified;}modified = jqXHR.getResponseHeader(\"etag\");if(modified){jQuery.etag[cacheURL] = modified;}} // if no content\nif(status === 204 || s.type === \"HEAD\"){statusText = \"nocontent\"; // if not modified\n}else if(status === 304){statusText = \"notmodified\"; // If we have data, let's convert it\n}else {statusText = response.state;success = response.data;error = response.error;isSuccess = !error;}}else { // Extract error from statusText and normalize for non-aborts\nerror = statusText;if(status || !statusText){statusText = \"error\";if(status < 0){status = 0;}}} // Set data for the fake xhr object\njqXHR.status = status;jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\nif(isSuccess){deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);}else {deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);} // Status-dependent callbacks\njqXHR.statusCode(_statusCode);_statusCode = undefined;if(fireGlobals){globalEventContext.trigger(isSuccess?\"ajaxSuccess\":\"ajaxError\",[jqXHR,s,isSuccess?success:error]);} // Complete\ncompleteDeferred.fireWith(callbackContext,[jqXHR,statusText]);if(fireGlobals){globalEventContext.trigger(\"ajaxComplete\",[jqXHR,s]); // Handle the global AJAX counter\nif(! --jQuery.active){jQuery.event.trigger(\"ajaxStop\");}}}return jqXHR;},getJSON:function getJSON(url,data,callback){return jQuery.get(url,data,callback,\"json\");},getScript:function getScript(url,callback){return jQuery.get(url,undefined,callback,\"script\");}});jQuery.each([\"get\",\"post\"],function(i,method){jQuery[method] = function(url,data,callback,type){ // Shift arguments if data argument was omitted\nif(jQuery.isFunction(data)){type = type || callback;callback = data;data = undefined;}return jQuery.ajax({url:url,type:method,dataType:type,data:data,success:callback});};});jQuery._evalUrl = function(url){return jQuery.ajax({url:url,type:\"GET\",dataType:\"script\",async:false,global:false,\"throws\":true});};jQuery.fn.extend({wrapAll:function wrapAll(html){var wrap;if(jQuery.isFunction(html)){return this.each(function(i){jQuery(this).wrapAll(html.call(this,i));});}if(this[0]){ // The elements to wrap the target around\nwrap = jQuery(html,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){wrap.insertBefore(this[0]);}wrap.map(function(){var elem=this;while(elem.firstElementChild) {elem = elem.firstElementChild;}return elem;}).append(this);}return this;},wrapInner:function wrapInner(html){if(jQuery.isFunction(html)){return this.each(function(i){jQuery(this).wrapInner(html.call(this,i));});}return this.each(function(){var self=jQuery(this),contents=self.contents();if(contents.length){contents.wrapAll(html);}else {self.append(html);}});},wrap:function wrap(html){var isFunction=jQuery.isFunction(html);return this.each(function(i){jQuery(this).wrapAll(isFunction?html.call(this,i):html);});},unwrap:function unwrap(){return this.parent().each(function(){if(!jQuery.nodeName(this,\"body\")){jQuery(this).replaceWith(this.childNodes);}}).end();}});jQuery.expr.filters.hidden = function(elem){ // Support: Opera <= 12.12\n// Opera reports offsetWidths and offsetHeights less than zero on some elements\nreturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;};jQuery.expr.filters.visible = function(elem){return !jQuery.expr.filters.hidden(elem);};var r20=/%20/g,rbracket=/\\[\\]$/,rCRLF=/\\r?\\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;function buildParams(prefix,obj,traditional,add){var name;if(jQuery.isArray(obj)){ // Serialize array item.\njQuery.each(obj,function(i,v){if(traditional || rbracket.test(prefix)){ // Treat each array item as a scalar.\nadd(prefix,v);}else { // Item is non-scalar (array or object), encode its numeric index.\nbuildParams(prefix + \"[\" + ((typeof v === \"undefined\"?\"undefined\":_typeof(v)) === \"object\"?i:\"\") + \"]\",v,traditional,add);}});}else if(!traditional && jQuery.type(obj) === \"object\"){ // Serialize object item.\nfor(name in obj) {buildParams(prefix + \"[\" + name + \"]\",obj[name],traditional,add);}}else { // Serialize scalar item.\nadd(prefix,obj);}} // Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function(a,traditional){var prefix,s=[],add=function add(key,value){ // If value is a function, invoke it and return its value\nvalue = jQuery.isFunction(value)?value():value == null?\"\":value;s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);}; // Set traditional to true for jQuery <= 1.3.2 behavior.\nif(traditional === undefined){traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;} // If an array was passed in, assume that it is an array of form elements.\nif(jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)){ // Serialize the form elements\njQuery.each(a,function(){add(this.name,this.value);});}else { // If traditional, encode the \"old\" way (the way 1.3.2 or older\n// did it), otherwise encode params recursively.\nfor(prefix in a) {buildParams(prefix,a[prefix],traditional,add);}} // Return the resulting serialization\nreturn s.join(\"&\").replace(r20,\"+\");};jQuery.fn.extend({serialize:function serialize(){return jQuery.param(this.serializeArray());},serializeArray:function serializeArray(){return this.map(function(){ // Can add propHook for \"elements\" to filter or add form elements\nvar elements=jQuery.prop(this,\"elements\");return elements?jQuery.makeArray(elements):this;}).filter(function(){var type=this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\nreturn this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));}).map(function(i,elem){var val=jQuery(this).val();return val == null?null:jQuery.isArray(val)?jQuery.map(val,function(val){return {name:elem.name,value:val.replace(rCRLF,\"\\r\\n\")};}):{name:elem.name,value:val.replace(rCRLF,\"\\r\\n\")};}).get();}});jQuery.ajaxSettings.xhr = function(){try{return new XMLHttpRequest();}catch(e) {}};var xhrId=0,xhrCallbacks={},xhrSuccessStatus={ // file protocol always yields status code 0, assume 200\n0:200, // Support: IE9\n// #1450: sometimes IE returns 1223 when it should be 204\n1223:204},xhrSupported=jQuery.ajaxSettings.xhr(); // Support: IE9\n// Open requests must be manually aborted on unload (#5280)\n// See https://support.microsoft.com/kb/2856746 for more info\nif(window.attachEvent){window.attachEvent(\"onunload\",function(){for(var key in xhrCallbacks) {xhrCallbacks[key]();}});}support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;support.ajax = xhrSupported = !!xhrSupported;jQuery.ajaxTransport(function(options){var callback; // Cross domain only allowed if supported through XMLHttpRequest\nif(support.cors || xhrSupported && !options.crossDomain){return {send:function send(headers,complete){var i,xhr=options.xhr(),id=++xhrId;xhr.open(options.type,options.url,options.async,options.username,options.password); // Apply custom fields if provided\nif(options.xhrFields){for(i in options.xhrFields) {xhr[i] = options.xhrFields[i];}} // Override mime type if needed\nif(options.mimeType && xhr.overrideMimeType){xhr.overrideMimeType(options.mimeType);} // X-Requested-With header\n// For cross-domain requests, seeing as conditions for a preflight are\n// akin to a jigsaw puzzle, we simply never set it to be sure.\n// (it can always be set on a per-request basis or even using ajaxSetup)\n// For same-domain requests, won't change header if already provided.\nif(!options.crossDomain && !headers[\"X-Requested-With\"]){headers[\"X-Requested-With\"] = \"XMLHttpRequest\";} // Set headers\nfor(i in headers) {xhr.setRequestHeader(i,headers[i]);} // Callback\ncallback = function(type){return function(){if(callback){delete xhrCallbacks[id];callback = xhr.onload = xhr.onerror = null;if(type === \"abort\"){xhr.abort();}else if(type === \"error\"){complete( // file: protocol always yields status 0; see #8605, #14207\nxhr.status,xhr.statusText);}else {complete(xhrSuccessStatus[xhr.status] || xhr.status,xhr.statusText, // Support: IE9\n// Accessing binary-data responseText throws an exception\n// (#11426)\ntypeof xhr.responseText === \"string\"?{text:xhr.responseText}:undefined,xhr.getAllResponseHeaders());}}};}; // Listen to events\nxhr.onload = callback();xhr.onerror = callback(\"error\"); // Create the abort callback\ncallback = xhrCallbacks[id] = callback(\"abort\");try{ // Do send the request (this may raise an exception)\nxhr.send(options.hasContent && options.data || null);}catch(e) { // #14683: Only rethrow if this hasn't been notified as an error yet\nif(callback){throw e;}}},abort:function abort(){if(callback){callback();}}};}}); // Install script dataType\njQuery.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function textScript(text){jQuery.globalEval(text);return text;}}}); // Handle cache's special case and crossDomain\njQuery.ajaxPrefilter(\"script\",function(s){if(s.cache === undefined){s.cache = false;}if(s.crossDomain){s.type = \"GET\";}}); // Bind script tag hack transport\njQuery.ajaxTransport(\"script\",function(s){ // This transport only deals with cross domain requests\nif(s.crossDomain){var script,callback;return {send:function send(_,complete){script = jQuery(\"<script>\").prop({async:true,charset:s.scriptCharset,src:s.url}).on(\"load error\",callback = function(evt){script.remove();callback = null;if(evt){complete(evt.type === \"error\"?404:200,evt.type);}});document.head.appendChild(script[0]);},abort:function abort(){if(callback){callback();}}};}});var oldCallbacks=[],rjsonp=/(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\njQuery.ajaxSetup({jsonp:\"callback\",jsonpCallback:function jsonpCallback(){var callback=oldCallbacks.pop() || jQuery.expando + \"_\" + nonce++;this[callback] = true;return callback;}}); // Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter(\"json jsonp\",function(s,originalSettings,jqXHR){var callbackName,overwritten,responseContainer,jsonProp=s.jsonp !== false && (rjsonp.test(s.url)?\"url\":typeof s.data === \"string\" && !(s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\nif(jsonProp || s.dataTypes[0] === \"jsonp\"){ // Get callback name, remembering preexisting value associated with it\ncallbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback; // Insert callback into url or form data\nif(jsonProp){s[jsonProp] = s[jsonProp].replace(rjsonp,\"$1\" + callbackName);}else if(s.jsonp !== false){s.url += (rquery.test(s.url)?\"&\":\"?\") + s.jsonp + \"=\" + callbackName;} // Use data converter to retrieve json after script execution\ns.converters[\"script json\"] = function(){if(!responseContainer){jQuery.error(callbackName + \" was not called\");}return responseContainer[0];}; // force json dataType\ns.dataTypes[0] = \"json\"; // Install callback\noverwritten = window[callbackName];window[callbackName] = function(){responseContainer = arguments;}; // Clean-up function (fires after converters)\njqXHR.always(function(){ // Restore preexisting value\nwindow[callbackName] = overwritten; // Save back as free\nif(s[callbackName]){ // make sure that re-using the options doesn't screw things around\ns.jsonpCallback = originalSettings.jsonpCallback; // save the callback name for future use\noldCallbacks.push(callbackName);} // Call if it was a function and we have a response\nif(responseContainer && jQuery.isFunction(overwritten)){overwritten(responseContainer[0]);}responseContainer = overwritten = undefined;}); // Delegate to script\nreturn \"script\";}}); // data: string of html\n// context (optional): If specified, the fragment will be created in this context, defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function(data,context,keepScripts){if(!data || typeof data !== \"string\"){return null;}if(typeof context === \"boolean\"){keepScripts = context;context = false;}context = context || document;var parsed=rsingleTag.exec(data),scripts=!keepScripts && []; // Single tag\nif(parsed){return [context.createElement(parsed[1])];}parsed = jQuery.buildFragment([data],context,scripts);if(scripts && scripts.length){jQuery(scripts).remove();}return jQuery.merge([],parsed.childNodes);}; // Keep a copy of the old load method\nvar _load=jQuery.fn.load; /**\n * Load a url into a page\n */jQuery.fn.load = function(url,params,callback){if(typeof url !== \"string\" && _load){return _load.apply(this,arguments);}var selector,type,response,self=this,off=url.indexOf(\" \");if(off >= 0){selector = jQuery.trim(url.slice(off));url = url.slice(0,off);} // If it's a function\nif(jQuery.isFunction(params)){ // We assume that it's the callback\ncallback = params;params = undefined; // Otherwise, build a param string\n}else if(params && (typeof params === \"undefined\"?\"undefined\":_typeof(params)) === \"object\"){type = \"POST\";} // If we have elements to modify, make the request\nif(self.length > 0){jQuery.ajax({url:url, // if \"type\" variable is undefined, then \"GET\" method will be used\ntype:type,dataType:\"html\",data:params}).done(function(responseText){ // Save response for use in complete callback\nresponse = arguments;self.html(selector? // If a selector was specified, locate the right elements in a dummy div\n// Exclude scripts to avoid IE 'Permission Denied' errors\njQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector): // Otherwise use the full result\nresponseText);}).complete(callback && function(jqXHR,status){self.each(callback,response || [jqXHR.responseText,status,jqXHR]);});}return this;}; // Attach a bunch of functions for handling common AJAX events\njQuery.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(i,type){jQuery.fn[type] = function(fn){return this.on(type,fn);};});jQuery.expr.filters.animated = function(elem){return jQuery.grep(jQuery.timers,function(fn){return elem === fn.elem;}).length;};var docElem=window.document.documentElement; /**\n * Gets a window from an element\n */function getWindow(elem){return jQuery.isWindow(elem)?elem:elem.nodeType === 9 && elem.defaultView;}jQuery.offset = {setOffset:function setOffset(elem,options,i){var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,position=jQuery.css(elem,\"position\"),curElem=jQuery(elem),props={}; // Set position first, in-case top/left are set even on static elem\nif(position === \"static\"){elem.style.position = \"relative\";}curOffset = curElem.offset();curCSSTop = jQuery.css(elem,\"top\");curCSSLeft = jQuery.css(elem,\"left\");calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n// top or left is auto and position is either absolute or fixed\nif(calculatePosition){curPosition = curElem.position();curTop = curPosition.top;curLeft = curPosition.left;}else {curTop = parseFloat(curCSSTop) || 0;curLeft = parseFloat(curCSSLeft) || 0;}if(jQuery.isFunction(options)){options = options.call(elem,i,curOffset);}if(options.top != null){props.top = options.top - curOffset.top + curTop;}if(options.left != null){props.left = options.left - curOffset.left + curLeft;}if(\"using\" in options){options.using.call(elem,props);}else {curElem.css(props);}}};jQuery.fn.extend({offset:function offset(options){if(arguments.length){return options === undefined?this:this.each(function(i){jQuery.offset.setOffset(this,options,i);});}var docElem,win,elem=this[0],box={top:0,left:0},doc=elem && elem.ownerDocument;if(!doc){return;}docElem = doc.documentElement; // Make sure it's not a disconnected DOM node\nif(!jQuery.contains(docElem,elem)){return box;} // Support: BlackBerry 5, iOS 3 (original iPhone)\n// If we don't have gBCR, just use 0,0 rather than error\nif(_typeof(elem.getBoundingClientRect) !== strundefined){box = elem.getBoundingClientRect();}win = getWindow(doc);return {top:box.top + win.pageYOffset - docElem.clientTop,left:box.left + win.pageXOffset - docElem.clientLeft};},position:function position(){if(!this[0]){return;}var offsetParent,offset,elem=this[0],parentOffset={top:0,left:0}; // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\nif(jQuery.css(elem,\"position\") === \"fixed\"){ // Assume getBoundingClientRect is there when computed position is fixed\noffset = elem.getBoundingClientRect();}else { // Get *real* offsetParent\noffsetParent = this.offsetParent(); // Get correct offsets\noffset = this.offset();if(!jQuery.nodeName(offsetParent[0],\"html\")){parentOffset = offsetParent.offset();} // Add offsetParent borders\nparentOffset.top += jQuery.css(offsetParent[0],\"borderTopWidth\",true);parentOffset.left += jQuery.css(offsetParent[0],\"borderLeftWidth\",true);} // Subtract parent offsets and element margins\nreturn {top:offset.top - parentOffset.top - jQuery.css(elem,\"marginTop\",true),left:offset.left - parentOffset.left - jQuery.css(elem,\"marginLeft\",true)};},offsetParent:function offsetParent(){return this.map(function(){var offsetParent=this.offsetParent || docElem;while(offsetParent && !jQuery.nodeName(offsetParent,\"html\") && jQuery.css(offsetParent,\"position\") === \"static\") {offsetParent = offsetParent.offsetParent;}return offsetParent || docElem;});}}); // Create scrollLeft and scrollTop methods\njQuery.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(method,prop){var top=\"pageYOffset\" === prop;jQuery.fn[method] = function(val){return access(this,function(elem,method,val){var win=getWindow(elem);if(val === undefined){return win?win[prop]:elem[method];}if(win){win.scrollTo(!top?val:window.pageXOffset,top?val:window.pageYOffset);}else {elem[method] = val;}},method,val,arguments.length,null);};}); // Support: Safari<7+, Chrome<37+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each([\"top\",\"left\"],function(i,prop){jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition,function(elem,computed){if(computed){computed = curCSS(elem,prop); // If curCSS returns percentage, fallback to offset\nreturn rnumnonpx.test(computed)?jQuery(elem).position()[prop] + \"px\":computed;}});}); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each({Height:\"height\",Width:\"width\"},function(name,type){jQuery.each({padding:\"inner\" + name,content:type,\"\":\"outer\" + name},function(defaultExtra,funcName){ // Margin is only for outerHeight, outerWidth\njQuery.fn[funcName] = function(margin,value){var chainable=arguments.length && (defaultExtra || typeof margin !== \"boolean\"),extra=defaultExtra || (margin === true || value === true?\"margin\":\"border\");return access(this,function(elem,type,value){var doc;if(jQuery.isWindow(elem)){ // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n// isn't a whole lot we can do. See pull request at this URL for discussion:\n// https://github.com/jquery/jquery/pull/764\nreturn elem.document.documentElement[\"client\" + name];} // Get document width or height\nif(elem.nodeType === 9){doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n// whichever is greatest\nreturn Math.max(elem.body[\"scroll\" + name],doc[\"scroll\" + name],elem.body[\"offset\" + name],doc[\"offset\" + name],doc[\"client\" + name]);}return value === undefined? // Get width or height on the element, requesting but not forcing parseFloat\njQuery.css(elem,type,extra): // Set width or height on the element\njQuery.style(elem,type,value,extra);},type,chainable?margin:undefined,chainable,null);};});}); // The number of elements contained in the matched element set\njQuery.fn.size = function(){return this.length;};jQuery.fn.andSelf = jQuery.fn.addBack; // Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\nif(true){!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return jQuery;}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}var  // Map over jQuery in case of overwrite\n_jQuery=window.jQuery, // Map over the $ in case of overwrite\n_$=window.$;jQuery.noConflict = function(deep){if(window.$ === jQuery){window.$ = _$;}if(deep && window.jQuery === jQuery){window.jQuery = _jQuery;}return jQuery;}; // Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif((typeof noGlobal === \"undefined\"?\"undefined\":_typeof(noGlobal)) === strundefined){window.jQuery = window.$ = jQuery;}return jQuery;});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jquery/dist/jquery.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/jquery/dist/jquery.js?");

/***/ },
/* 5 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _Backbone = __webpack_require__(2);\n\nvar _Backbone2 = _interopRequireDefault(_Backbone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PlanetView = _Backbone2.default.View.extend({\n\n\tinitialize: function initialize() {\n\t\tthis.listenTo(this.model, \"change\", this.render);\n\t\tthis.render();\n\t},\n\n\trender: function render() {\n\t\tvar model = this.model.attributes;\n\t\tconsole.log('this.model', model);\n\n\t\tthis.$el.html(model.name);\n\t}\n\n});\n\nexports.default = PlanetView;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/current-planet/view.js\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./scripts/current-planet/view.js?");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _Backbone = __webpack_require__(2);\n\nvar _Backbone2 = _interopRequireDefault(_Backbone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PlanetModel = _Backbone2.default.Model.extend({\n\tdefaults: {\n\t\tname: '...'\n\t}\n});\n\nexports.default = PlanetModel;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/current-planet/model.js\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./scripts/current-planet/model.js?");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _jQuery = __webpack_require__(4);\n\nvar _jQuery2 = _interopRequireDefault(_jQuery);\n\nvar _Backbone = __webpack_require__(2);\n\nvar _Backbone2 = _interopRequireDefault(_Backbone);\n\nvar _view = __webpack_require__(9);\n\nvar _view2 = _interopRequireDefault(_view);\n\nvar _model = __webpack_require__(10);\n\nvar _model2 = _interopRequireDefault(_model);\n\nvar _request = __webpack_require__(11);\n\nvar _request2 = _interopRequireDefault(_request);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar listModel = new _model2.default();\nvar listView = new _view2.default({\n\tmodel: listModel,\n\tel: '.js-planets-list'\n});\n\n_request2.default.request('', function (data) {\n\n\tconsole.log('data', data.apprentice.id);\n\n\tvar _list = listModel.get('list').slice();\n\t_list.push({\n\t\tname: data.name,\n\t\tplanet: data.homeworld.name\n\t});\n\n\tlistModel.set({ 'list': _list });\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/planets-list/controller.js\n ** module id = 8\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./scripts/planets-list/controller.js?");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _Backbone = __webpack_require__(2);\n\nvar _Backbone2 = _interopRequireDefault(_Backbone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar listView = _Backbone2.default.View.extend({\n\tinitialize: function initialize() {\n\t\tthis.listenTo(this.model, \"change\", this.render);\n\t\tthis.render();\n\t},\n\n\trenderString: function renderString(name, planet) {\n\t\treturn '\\n\\t\\t\\t<li class=\"css-slot\">\\n\\t\\t\\t\\t<h3>' + name + '</h3>\\n\\t\\t\\t\\t<h6>Homeworld: ' + planet + '</h6>\\n\\t\\t\\t</li>';\n\t},\n\n\trender: function render() {\n\t\tvar _this = this;\n\n\t\tvar model = this.model.attributes;\n\t\tvar html = '';\n\n\t\tconsole.log('model.list', model.list);\n\n\t\tmodel.list.reduce(function (previous, current) {\n\t\t\thtml += _this.renderString(current.name, current.planet);\n\t\t}, {});\n\n\t\tthis.$el.html(html);\n\t}\n\n});\n\nexports.default = listView;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/planets-list/view.js\n ** module id = 9\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./scripts/planets-list/view.js?");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _Backbone = __webpack_require__(2);\n\nvar _Backbone2 = _interopRequireDefault(_Backbone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar listModel = _Backbone2.default.Model.extend({\n\tdefaults: {\n\t\tlist: []\n\t}\n});\n\nexports.default = listModel;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/planets-list/model.js\n ** module id = 10\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./scripts/planets-list/model.js?");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _jQuery = __webpack_require__(4);\n\nvar _jQuery2 = _interopRequireDefault(_jQuery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar requests = [];\n\nexports.default = {\n\trequest: function request(id, cb) {\n\t\tvar _get = _jQuery2.default.get('http://jedi.smartjs.academy/dark-jedis/' + id, function (data) {\n\t\t\tcb(data);\n\t\t});\n\n\t\trequests.push(_get);\n\t},\n\tcancelLast: function cancelLast() {\n\t\tvar _get = requests.shift();\n\t\t_get.abort();\n\t},\n\tcancelAll: function cancelAll() {\n\t\trequests.forEach(function (i) {\n\t\t\ti.abort();\n\t\t});\n\t\trequests = [];\n\t}\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./scripts/planets-list/request.js\n ** module id = 11\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./scripts/planets-list/request.js?");

/***/ }
/******/ ]);